3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"ThemeProviders"]
7:I[4080,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],""]
8:I[9032,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],""]
a:I[8173,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"Image"]
b:I[509,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarButton"]
c:I[1398,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
d:I[7606,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
e:I[7510,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
f:I[8976,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
4:["slug","tools/n8n-introduction","c"]
0:["Ts-6BBsjdSlBnGT_Ikyc2",[[["",{"children":["blog",{"children":[["slug","tools/n8n-introduction","c"],{"children":["__PAGE__?{\"slug\":[\"tools\",\"n8n-introduction\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","tools/n8n-introduction","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a9b9096fa657c0d0.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_dd5b2f scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"https://mainjaylai.github.io/favicon.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/manifest.json"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&display=swap","rel":"stylesheet"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=ZCOOL+KuaiLe&family=ZCOOL+QingKe+HuangYou&family=ZCOOL+XiaoWei&display=swap","rel":"stylesheet"}],["$","script",null,{"src":"https://us.umami.is/script.js","async":true}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","meta",null,{"name":"referrer","content":"no-referrer"}],["$","script",null,{"src":"https://cdn.jsdelivr.net/gh/ashishagarwal2023/freegptjs@1.0.2/src/freegpt.min.js"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","suppressHydrationWarning":true,"children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"bbe21cb3-3de3-4ba7-b6de-453053bc6ae8","src":"https://us.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"/search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-5","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"Blog","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","$La",null,{"src":"https://mainjaylai.github.io/favicon.png","width":44,"height":44,"alt":"logo"}]}],["$","div",null,{"className":"hidden h-[44px] text-center text-3xl font-semibold leading-10 sm:block","children":"Blog"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Blog"}],["$","$L9",null,{"href":"/tags","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Tags"}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://mainjaylai.github.io","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"About"}]],["$","$Lb",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lc",null,{}],["$","$Ld",null,{}],["$","$Le",null,{}],["$","$Lf",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:mainjaylai@outlook.com","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/mainjaylai","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitlab.com/JayMain","children":[["$","span",null,{"className":"sr-only","children":"gitlab"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M1022.08 579.712l-57.258667-176.426667-113.664-349.397333a19.413333 19.413333 0 0 0-36.992 0L700.501333 403.2H323.498667L209.877333 53.888C204.074667 35.84 178.56 35.84 172.8 53.76L59.136 403.157333 1.877333 579.712a39.424 39.424 0 0 0 14.122667 43.648L512 983.637333l496-360.234666a39.253333 39.253333 0 0 0 14.08-43.690667"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitee.com/lmj2001","children":[["$","span",null,{"className":"sr-only","children":"gitee"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M512 992C246.895625 992 32 777.104375 32 512S246.895625 32 512 32s480 214.895625 480 480-214.895625 480-480 480z m242.9521875-533.3278125h-272.56875a23.7121875 23.7121875 0 0 0-23.71125 23.7121875l-0.024375 59.255625c0 13.08 10.6078125 23.7121875 23.6878125 23.7121875h165.96c13.104375 0 23.7121875 10.6078125 23.7121875 23.6878125v11.855625a71.1121875 71.1121875 0 0 1-71.1121875 71.1121875h-225.215625a23.7121875 23.7121875 0 0 1-23.6878125-23.7121875V423.1278125a71.1121875 71.1121875 0 0 1 71.0878125-71.1121875h331.824375a23.7121875 23.7121875 0 0 0 23.6878125-23.71125l0.0721875-59.2565625a23.7121875 23.7121875 0 0 0-23.68875-23.7121875H423.08a177.76875 177.76875 0 0 0-177.76875 177.7921875V754.953125c0 13.1034375 10.60875 23.7121875 23.713125 23.7121875h349.63125a159.984375 159.984375 0 0 0 159.984375-159.984375V482.36a23.7121875 23.7121875 0 0 0-23.7121875-23.6878125z"}]}]]}]]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"MainJayLai"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"MainJayLai Blog"}]]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c890694439b2475b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/1ea5cf861ee12a80.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[4347,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
12:I[408,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
13:I[9629,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"n8n 深度调研与 AI Agent 架构选型报告\",\"datePublished\":\"2025-06-20T00:00:00.000Z\",\"dateModified\":\"2025-06-20T00:00:00.000Z\",\"description\":\"本报告旨在对工作流自动化工具 n8n 进行深度调研，并在此基础上，探讨如何构建自定义 AI Agent 的最佳实践与架构选型。\",\"image\":\"https://pngimg.com/uploads/github/github_PNG80.png\",\"url\":\"https://blog.mainjay.cloudns.ch/blog/tools/n8n-introduction\",\"author\":[{\"@type\":\"Person\",\"name\":\"mainJayLai\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$L11",null,{}],["$","article",null,{"children":["$","div",null,{"children":[["$","header",null,{"children":["$","div",null,{"className":"space-y-1 border-b border-gray-200 pb-10 text-center dark:border-gray-700","children":[["$","div",null,{"className":"beautiful-chinese-title","children":["$","h1",null,{"className":"text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14","children":"n8n 深度调研与 AI Agent 架构选型报告"}]}],["$","dl",null,{"children":["$","div",null,{"children":[["$","dt",null,{"className":"sr-only","children":"Published on"}],["$","dd",null,{"className":"text-base font-medium leading-6 text-gray-500 dark:text-gray-400","children":["$","time",null,{"dateTime":"2025-06-20T00:00:00.000Z","children":"June 20, 2025"}]}]]}]}]]}]}],["$","div",null,{"className":"grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:divide-y-0","children":[["$","div",null,{"className":"divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0","children":["$","div",null,{"className":"beautiful-chinese-content prose max-w-none pb-8 pt-10 dark:prose-invert","children":[["$","h2",null,{"className":"content-header","id":"摘要","children":[["$","a",null,{"href":"#摘要","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"摘要"]}],["$","p",null,{"children":["本报告旨在对工作流自动化工具 n8n 进行深度调研，并在此基础上，探讨如何构建自定义 AI Agent 的最佳实践与架构选型。报告首先介绍了 n8n 的核心概念、优势及学习资源；其次，深入分析了其节点（工具）的源码结构与自定义开发流程；最后，重点对比了在 n8n 中直接构建 Agent 与使用专用 Agent 框架（如 LangChain、AutoGen）的优劣，并提出了一套兼具灵活性与易用性的",["$","strong",null,{"children":"混合式架构方案"}],"。"]}],["$","p",null,{"children":["$","strong",null,{"children":"核心结论："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"n8n 是一个功能强大的编排与集成平台"}],"，其核心优势在于可视化的工作流编辑器和超过 500 个开箱即用的集成节点，非常适合处理任务触发、数据流转和与外部服务的 API 对接。"]}],["$","li",null,{"children":["n8n 内置了强大的 AI Agent 功能，但其更适合",["$","strong",null,{"children":"逻辑相对线性、可预见的 Agent 工作流"}],"。"]}],["$","li",null,{"children":["对于需要",["$","strong",null,{"children":"复杂、动态、循环或多角色协作的 Agent 任务"}],"，独立的 Python Agent 框架（如 LangChain, AutoGen）在逻辑灵活性和状态管理方面更具优势。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"最佳架构方案为“混合架构”"}],"：利用 ",["$","strong",null,{"children":"n8n 作为“编排层”"}],"，负责任务的触发和 I/O；利用 ",["$","strong",null,{"children":"Python Agent 框架作为“智能层”"}],"，负责核心的、复杂的思考与决策逻辑。两者通过 API 调用进行通信。"]}]]}],["$","hr",null,{}],["$","h2",null,{"className":"content-header","id":"第一章n8n-核心概念与学习资源","children":[["$","a",null,{"href":"#第一章n8n-核心概念与学习资源","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"第一章：n8n 核心概念与学习资源"]}],["$","h3",null,{"className":"content-header","id":"11-n8n-是什么","children":[["$","a",null,{"href":"#11-n8n-是什么","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"1.1 n8n 是什么？"]}],["$","p",null,{"children":"n8n 是一个采用 \"Fair-code\" 许可、可自托管的开源工作流自动化工具。它允许用户通过一个可视化的节点编辑器，连接不同的应用程序和服务，以创建复杂的自动化流程。与 Zapier 或 Make 等纯粹的低代码平台不同，n8n 面向的是具有一定技术背景的用户（如开发者、运维人员），提供了更高的灵活性和扩展性。"}],["$","h3",null,{"className":"content-header","id":"12-核心优势","children":[["$","a",null,{"href":"#12-核心优势","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"1.2 核心优势"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"可视化工作流编辑器"}],"：通过拖拽和连接节点来构建自动化逻辑，直观易懂。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"丰富的集成生态"}],"：拥有超过 500 个官方和社区贡献的集成节点，可以轻松连接数据库、SaaS 应用、通信工具等。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"高度可扩展"}],"：",["$","ul",null,{"children":[["$","li",null,{"children":"可以在工作流中直接运行自定义的 JavaScript 或 Python 代码。"}],["$","li",null,{"children":"支持创建完全自定义的节点。"}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"自托管与数据控制"}],"：可以部署在自己的服务器上（通过 Docker, Kubernetes 等），确保对数据和工作流的完全控制，满足安全与合规要求。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"内置 AI/Agent 能力"}],"：原生支持 LangChain.js，提供了构建 AI Agent 所需的全套节点，包括 LLM、向量存储、记忆和工具等。"]}]]}],["$","h3",null,{"className":"content-header","id":"13-推荐视频教程","children":[["$","a",null,{"href":"#13-推荐视频教程","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"1.3 推荐视频教程"]}],["$","p",null,{"children":"n8n 在中文视频平台（如 Bilibili）上的原生优质教程相对较少。最权威、最全面的学习资源是其官方 YouTube 频道。"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://www.google.com/search?q=https://www.youtube.com/playlist%3Flist%3DPL8p_k_iA4Q-51-a_o5m5y0z02_PA93k3G","children":"n8n 官方 YouTube 教程播放列表"}]}],["$","ul",null,{"children":["$","li",null,{"children":"内容涵盖从入门基础到构建复杂 AI Agent 的各类案例，是入门和进阶的首选。"}]}]]}]}],["$","hr",null,{}],["$","h2",null,{"className":"content-header","id":"第二章n8n-源码与自定义节点开发","children":[["$","a",null,{"href":"#第二章n8n-源码与自定义节点开发","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"第二章：n8n 源码与自定义节点开发"]}],["$","p",null,{"children":"要真正掌握 n8n，理解其核心——节点的实现原理至关重要。"}],["$","h3",null,{"className":"content-header","id":"21-源码结构分析","children":[["$","a",null,{"href":"#21-源码结构分析","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"2.1 源码结构分析"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"官方 GitHub 仓库"}],": ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://github.com/n8n-io/n8n","children":"https://github.com/n8n-io/n8n"}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"核心节点代码位置"}],": n8n 的所有官方标准节点都位于主仓库的 ",["$","code",null,{"className":"custom-code","children":"packages/nodes-base/src/nodes/"}]," 目录下。通过分析此目录下的具体节点（如 ",["$","code",null,{"className":"custom-code","children":"HttpRequest"}],"），可以深入了解其内部实现。"]}]]}],["$","h3",null,{"className":"content-header","id":"22-节点实现原理","children":[["$","a",null,{"href":"#22-节点实现原理","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"2.2 节点实现原理"]}],["$","p",null,{"children":"一个 n8n 节点本质上是一个定义了属性和执行逻辑的 TypeScript 文件。其开发模式分为两种："}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"声明式 (Declarative Style)"}],": 主要用于快速封装标准的 REST API。开发者只需定义 API 的资源（如 ",["$","code",null,{"className":"custom-code","children":"user"}],", ",["$","code",null,{"className":"custom-code","children":"ticket"}],"）和操作（如 ",["$","code",null,{"className":"custom-code","children":"get"}],", ",["$","code",null,{"className":"custom-code","children":"create"}],", ",["$","code",null,{"className":"custom-code","children":"list"}],"），n8n 会自动生成节点的 UI 和 API 调用逻辑。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"编程式 (Programmatic Style)"}],": 提供了最大的灵活性。开发者需要手动实现 ",["$","code",null,{"className":"custom-code","children":"execute()"}]," 方法，在该方法中编写任意的 TypeScript/JavaScript 代码来处理输入数据并返回输出结果。"]}]]}],["$","p",null,{"children":"一个节点通常由以下两个核心文件构成："}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","code",null,{"className":"custom-code","children":"<node-name>.node.ts"}],": 定义节点的属性（名称、图标、输入参数 UI）、执行逻辑、路由等。"]}],["$","li",null,{"children":[["$","code",null,{"className":"custom-code","children":"<node-name>.credentials.ts"}],": （可选）定义与该节点相关的认证方式，如 API Key, OAuth2 等。"]}]]}],["$","h3",null,{"className":"content-header","id":"23-如何开发自定义节点插件","children":[["$","a",null,{"href":"#23-如何开发自定义节点插件","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"2.3 如何开发自定义节点(插件)"]}],["$","p",null,{"children":["n8n 的节点系统是其架构的核心。每个节点都是一个独立的、用 ",["$","strong",null,{"children":"TypeScript"}]," 编写的模块，它向 n8n 主程序清晰地描述了自己的功能、所需的输入参数以及能产生的输出。"]}],["$","p",null,{"children":["$","strong",null,{"children":"关键实现方式："}]}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"统一的接口"}],": 每个节点都必须实现 ",["$","code",null,{"className":"custom-code","children":"INodeType"}]," 接口。这个接口规定了节点必须提供一个 ",["$","code",null,{"className":"custom-code","children":"description"}]," 对象，该对象详细定义了节点的元数据和属性。",["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"元数据"}],": 节点的显示名称 (",["$","code",null,{"className":"custom-code","children":"displayName"}],")、内部名称 (",["$","code",null,{"className":"custom-code","children":"name"}],")、图标 (",["$","code",null,{"className":"custom-code","children":"icon"}],")、所属分组 (",["$","code",null,{"className":"custom-code","children":"group"}],") 等。"]}],["$","li",null,{"children":[["$","strong",null,{"children":["属性 (",["$","code",null,{"className":"custom-code","children":"properties"}],")"]}],": 这是节点的核心，定义了在 n8n 编辑器 UI 中展示给用户的配置字段，比如输入框、下拉菜单、开关等。"]}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"两种开发风格"}],": n8n 提供了两种开发模式以适应不同复杂度的需求。",["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"声明式 (Declarative Style)"}],": 这是更简单、更推荐的方式，尤其适用于封装标准的 REST API。开发者只需通过 JSON 格式定义好 API 的资源（如 ",["$","code",null,{"className":"custom-code","children":"user"}],", ",["$","code",null,{"className":"custom-code","children":"ticket"}],"）和操作（如 ",["$","code",null,{"className":"custom-code","children":"get"}],", ",["$","code",null,{"className":"custom-code","children":"create"}],", ",["$","code",null,{"className":"custom-code","children":"list"}],"），n8n 就会自动处理 UI 生成、API 请求构建和发送。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"编程式 (Programmatic Style)"}],": 提供了最大的灵活性。开发者需要亲自实现一个 ",["$","code",null,{"className":"custom-code","children":"execute"}]," 方法。n8n 在执行工作流时会调用这个方法，并将上一个节点的输出数据作为参数传入。开发者可以在此方法内编写任意代码来处理数据、调用外部服务，并返回该节点的结果。"]}]]}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"数据流"}],": 节点之间通过标准化的 JSON 对象数组进行数据传递。每个节点接收前一个节点的输出，经过 ",["$","code",null,{"className":"custom-code","children":"execute"}]," 方法处理后，再将自己的输出传递给下一个节点。"]}]]}],["$","p",null,{"children":"一个标准的自定义节点项目通常包含以下文件和目录结构："}],["$","$L12",null,{"className":"language-js","children":["$","code",null,{"className":"language-js code-highlight","children":[["$","span",null,{"className":"code-line","children":["my",["$","span",null,{"className":"token operator","children":"-"}],"custom",["$","span",null,{"className":"token operator","children":"-"}],"node",["$","span",null,{"className":"token operator","children":"/"}],"\n"]}],["$","span",null,{"className":"code-line","children":["├── nodes",["$","span",null,{"className":"token operator","children":"/"}],"                          # 存放所有节点逻辑\n"]}],["$","span",null,{"className":"code-line","children":["│   └── ",["$","span",null,{"className":"token maybe-class-name","children":"MyNode"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"node"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"ts"}],"              # 节点的主文件（定义属性和执行逻辑）\n"]}],["$","span",null,{"className":"code-line","children":["│   ",["$","span",null,{"className":"token function","children":"└──"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"optional",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token maybe-class-name","children":"MyNode"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"node"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"json"}]," # 节点的元数据文件\n"]}],["$","span",null,{"className":"code-line","children":["│   ",["$","span",null,{"className":"token function","children":"└──"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"optional",["$","span",null,{"className":"token punctuation","children":")"}]," icon",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"svg"}],"         # 节点的图标\n"]}],["$","span",null,{"className":"code-line","children":["├── credentials",["$","span",null,{"className":"token operator","children":"/"}],"                    # 存放所有凭证逻辑\n"]}],["$","span",null,{"className":"code-line","children":["│   └── ",["$","span",null,{"className":"token maybe-class-name","children":"MyCredential"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"credentials"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"ts"}]," # 凭证的主文件（定义认证字段）\n"]}],["$","span",null,{"className":"code-line","children":["├── ",["$","span",null,{"className":"token keyword","children":"package"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"json"}],"                    # 项目的 npm 包定义文件\n"]}],["$","span",null,{"className":"code-line","children":["└── ",["$","span",null,{"className":"token operator spread","children":"..."}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"其他配置文件如 tsconfig",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"json"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}]]}]}],["$","p",null,{"children":"n8n 官方提供了一个用于创建自定义节点的模板，极大地简化了开发流程。"}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"官方入门模板"}],": ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://github.com/n8n-io/n8n-nodes-starter","children":"https://github.com/n8n-io/n8n-nodes-starter"}]]}]}],["$","p",null,{"children":["$","strong",null,{"children":"开发流程概述:"}]}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"环境准备"}],": 安装 Node.js、npm/yarn。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"克隆模板"}],": ",["$","code",null,{"className":"custom-code","children":"git clone https://github.com/n8n-io/n8n-nodes-starter.git"}]]}],["$","li",null,{"children":[["$","strong",null,{"children":"修改代码"}],": 在 ",["$","code",null,{"className":"custom-code","children":"nodes"}]," 和 ",["$","code",null,{"className":"custom-code","children":"credentials"}]," 目录下修改或创建你的节点和凭证逻辑。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"安装依赖与构建"}],": ",["$","code",null,{"className":"custom-code","children":"npm install && npm run build"}],"。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"本地测试"}],": 将编译后的代码链接到你的 n8n 本地安装目录（通常是 ",["$","code",null,{"className":"custom-code","children":"~/.n8n/custom/"}],"），然后启动 n8n 即可在编辑器中看到你的自定义节点并进行调试。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"发布"}],": （可选）可以将你的节点包发布到 npm，供社区使用。"]}]]}],["$","hr",null,{}],["$","h2",null,{"className":"content-header","id":"第三章构建-ai-agentn8n-vs-专用框架","children":[["$","a",null,{"href":"#第三章构建-ai-agentn8n-vs-专用框架","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"第三章：构建 AI Agent：n8n vs. 专用框架"]}],["$","h3",null,{"className":"content-header","id":"31-在-n8n-中构建-agent","children":[["$","a",null,{"href":"#31-在-n8n-中构建-agent","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"3.1 在 n8n 中构建 Agent"]}],["$","p",null,{"children":"n8n 深度集成了 LangChain.js，提供了一套完整的节点来在可视化界面中构建 AI Agent。"}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"核心组件"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Agent 节点"}],": ",["$","code",null,{"className":"custom-code","children":"AI Agent"}]," 节点是总指挥，负责协调 LLM、工具和记忆。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"LLM 节点"}],": 支持 ",["$","code",null,{"className":"custom-code","children":"OpenAI"}],", ",["$","code",null,{"className":"custom-code","children":"Google Gemini"}],", ",["$","code",null,{"className":"custom-code","children":"Mistral"}],", ",["$","code",null,{"className":"custom-code","children":"Anthropic"}]," 等多种大语言模型。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"工具 (Tools)"}],": 任何 n8n 节点或子工作流都可以被连接到 ",["$","code",null,{"className":"custom-code","children":"AI Agent"}]," 节点的“Tools”输入端，成为 Agent 可调用的工具。",["$","code",null,{"className":"custom-code","children":"Call n8n Workflow Tool"}]," 节点尤其强大，允许 Agent 调用另一个工作流，实现模块化。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"记忆 (Memory)"}],": 提供了从简单的会话记忆到基于 ",["$","code",null,{"className":"custom-code","children":"Redis"}],", ",["$","code",null,{"className":"custom-code","children":"Postgres"}]," 等的持久化长期记忆节点。"]}]]}]]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"优势"}],": 上手快，集成方便，非常适合将现有工作流能力（如调用 CRM、发送邮件）快速赋能给 AI。"]}]}]]}],["$","h3",null,{"className":"content-header","id":"32-主流独立-agent-框架概览","children":[["$","a",null,{"href":"#32-主流独立-agent-框架概览","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"3.2 主流独立 Agent 框架概览"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"LangChain"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"理念"}],": 可组合性（Composability）。通过“链”和“表达式语言（LCEL）”将各个组件灵活组合。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"架构"}],": ",["$","code",null,{"className":"custom-code","children":"LangGraph"}]," 模块是其构建复杂 Agent 的核心，支持创建有状态、有循环的图形化工作流，能更好地实现 ReAct 等高级 Agent 模式。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"场景"}],": 通用性强，适合需要高度定制化和复杂逻辑编排的 Agent。"]}]]}]]}],["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"LlamaIndex"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"理念"}],": 以数据为中心（Data-Centric）。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"架构"}],": 核心是数据的高效摄取、索引和查询，专为构建强大的检索增强生成（RAG）应用而设计。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"场景"}],": 强依赖于私有知识库（如 PDF、公司文档）的问答、分析类 Agent。"]}]]}]]}],["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"AutoGen (Microsoft)"}],":"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"理念"}],": 多 Agent 对话（Multi-Agent Conversation）。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"架构"}],": 通过让多个具有不同角色的 Agent（如工程师、测试员、产品经理）进行对话和协作来完成复杂任务。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"场景"}],": 适合能被清晰分解为多个协作角色的任务，如自动化编程、内容创作流水线等。"]}]]}]]}]]}],["$","h3",null,{"className":"content-header","id":"33-对比分析","children":[["$","a",null,{"href":"#33-对比分析","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"3.3 对比分析"]}],["$","div",null,{"className":"w-full overflow-x-auto","children":["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"left"},"children":"特性"}],["$","th",null,{"style":{"textAlign":"left"},"children":"在 n8n 中构建 Agent"}],["$","th",null,{"style":{"textAlign":"left"},"children":"使用独立 Agent 框架 (如 LangChain)"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"灵活性"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"中等"}],"。适合线性和预定义分支的工作流。对于复杂的循环和动态状态管理，实现起来较繁琐。"]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"高"}],"。专为复杂 Agentic 逻辑设计，能轻松实现循环、状态机和多 Agent 通信。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"开发复杂度"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"低"}],"。可视化、低代码，学习曲线平缓。"]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"高"}],"。纯代码驱动，对开发者的编程能力和框架理解要求高。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"生态与集成"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"极强"}],"。n8n 的核心优势，500+ 内置集成节点，连接外部服务非常便捷。"]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"中等"}],"。虽有社区贡献的集成，但通常需要编写“胶水代码”来调用外部 API。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"运维与部署"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"中等"}],"。提供云版本和成熟的自托管方案 (Docker)。"]}],["$","td",null,{"style":{"textAlign":"left"},"children":[["$","strong",null,{"children":"高"}],"。需自行管理 Python 应用、依赖、部署为服务，并搭建配套的监控系统。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"核心优势"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"任务编排与外部集成"}]}],["$","td",null,{"style":{"textAlign":"left"},"children":["$","strong",null,{"children":"核心智能与复杂逻辑"}]}]]}]]}]]}]}],["$","hr",null,{}],["$","h2",null,{"className":"content-header","id":"第四章架构设计与技术选型建议","children":[["$","a",null,{"href":"#第四章架构设计与技术选型建议","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"第四章：架构设计与技术选型建议"]}],["$","p",null,{"children":["孤立地选择任何一种方案都有其短板。为了兼得鱼和熊掌，我们推荐采用一种将两者优势结合的",["$","strong",null,{"children":"混合架构"}],"。"]}],["$","h3",null,{"className":"content-header","id":"41-设计原则分离编排与智能","children":[["$","a",null,{"href":"#41-设计原则分离编排与智能","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"4.1 设计原则：分离编排与智能"]}],["$","p",null,{"children":"将整个 Agent 系统划分为两个层次，各司其职："}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"编排层 (Orchestration Layer)"}],": 负责“做什么”和“怎么交互”。处理任务的触发、与外部世界的 I/O、数据的预处理和后处理。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"智能层 (Intelligence Layer)"}],": 负责“怎么想”。处理核心的、复杂的、可能包含多步推理和动态决策的 Agent 逻辑。"]}]]}],["$","h3",null,{"className":"content-header","id":"42-推荐架构n8n--python-agent-服务","children":[["$","a",null,{"href":"#42-推荐架构n8n--python-agent-服务","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"4.2 推荐架构：n8n + Python Agent 服务"]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","p",null,{"children":["$","strong",null,{"children":"编排层 (Orchestration Layer) → 使用 n8n"}]}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"职责"}],":",["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"任务触发"}],": 使用 n8n 的 ",["$","code",null,{"className":"custom-code","children":"Webhook"}]," / ",["$","code",null,{"className":"custom-code","children":"Schedule"}]," / ",["$","code",null,{"className":"custom-code","children":"Gmail"}]," 等触发器启动任务。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"数据收集"}],": 利用 n8n 的集成节点从 CRM、数据库等源头拉取数据。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"调用智能层"}],": 通过 ",["$","code",null,{"className":"custom-code","children":"HTTP Request"}]," 节点，将任务和数据以 API 请求的形式发送给 Python 智能层。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"任务后处理"}],": 接收智能层的处理结果，并利用 n8n 的节点执行后续动作（如发送 Slack 通知、更新 Airtable）。"]}]]}]]}]}]]}],["$","li",null,{"children":[["$","p",null,{"children":["$","strong",null,{"children":"智能层 (Intelligence Layer) → 使用 Python + Agent 框架 (如 LangChain/AutoGen)"}]}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"职责"}],":",["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"接收任务"}],": 使用轻量级 Web 框架（如 ",["$","strong",null,{"children":"FastAPI"}],"）暴露一个 API 端点。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"执行核心 Agent 逻辑"}],": 在此服务中实例化并运行你的 Agent，充分利用 LangChain/AutoGen 的高级功能。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"返回结果"}],": 将最终的决策或生成的内容通过 API 响应返回给 n8n。"]}]]}]]}]}]]}]]}],["$","h3",null,{"className":"content-header","id":"43-技术选型指南","children":[["$","a",null,{"href":"#43-技术选型指南","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"4.3 技术选型指南"]}],["$","ul",null,{"children":[["$","li",null,{"children":["对于",["$","strong",null,{"children":"编排层"}],"，",["$","strong",null,{"children":"n8n"}]," 是不二之选。"]}],["$","li",null,{"children":["对于",["$","strong",null,{"children":"智能层"}],"，建议使用 ",["$","strong",null,{"children":"Python + FastAPI"}]," 搭建服务。"]}],["$","li",null,{"children":["在 Python 服务内部，根据 Agent 的具体需求选择框架：",["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"LangChain"}],": 适用于需要复杂工具链、多步推理的",["$","strong",null,{"children":"通用 Agent"}],"。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"AutoGen"}],": 适用于可以被分解为多个角色协作的",["$","strong",null,{"children":"复杂任务"}],"。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"LlamaIndex"}],": 当 Agent 的核心能力是基于私有知识库的问答（RAG）时，应深度集成此框架。"]}]]}]]}]]}],["$","p",null,{"children":"这种混合架构最大限度地发挥了 n8n 在集成和低代码编排上的优势，同时又保留了 Python Agent 框架在实现复杂智能逻辑上的灵活性和强大能力，是构建高级、健壮且可维护的自定义 Agent 系统的理想选择。"}]]}]}],["$","div",null,{"className":"pb-6 pt-6 text-center text-gray-700 dark:text-gray-300","id":"comment","children":["$","$L13",null,{"slug":"tools/n8n-introduction"}]}],["$","footer",null,{"children":["$","div",null,{"className":"flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base","children":[["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/system/aws-vpc","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Previous post: Amazon VPC图解指南：为什么它被称为云，如果它不是云？","children":["← ","Amazon VPC图解指南：为什么它被称为云，如果它不是云？"]}]}],["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/go/go-memory-alignment-and-allocation","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Next post: 深入理解 Go 的内存对齐与分配机制","children":["深入理解 Go 的内存对齐与分配机制"," →"]}]}]]}]}]]}]]}]}]]}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"n8n 深度调研与 AI Agent 架构选型报告"}],["$","meta","3",{"name":"description","content":"本报告旨在对工作流自动化工具 n8n 进行深度调研，并在此基础上，探讨如何构建自定义 AI Agent 的最佳实践与架构选型。"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://blog.mainjay.cloudns.ch/blog/tools/n8n-introduction"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mainjay.cloudns.ch/feed.xml"}],["$","meta","8",{"property":"og:title","content":"n8n 深度调研与 AI Agent 架构选型报告"}],["$","meta","9",{"property":"og:description","content":"本报告旨在对工作流自动化工具 n8n 进行深度调研，并在此基础上，探讨如何构建自定义 AI Agent 的最佳实践与架构选型。"}],["$","meta","10",{"property":"og:url","content":"https://blog.mainjay.cloudns.ch/blog/tools/n8n-introduction"}],["$","meta","11",{"property":"og:site_name","content":"MainJayLai Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","14",{"property":"og:type","content":"article"}],["$","meta","15",{"property":"article:published_time","content":"2025-06-20T00:00:00.000Z"}],["$","meta","16",{"property":"article:modified_time","content":"2025-06-20T00:00:00.000Z"}],["$","meta","17",{"property":"article:author","content":"mainJayLai"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"n8n 深度调研与 AI Agent 架构选型报告"}],["$","meta","20",{"name":"twitter:description","content":"本报告旨在对工作流自动化工具 n8n 进行深度调研，并在此基础上，探讨如何构建自定义 AI Agent 的最佳实践与架构选型。"}],["$","meta","21",{"name":"twitter:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
