3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"ThemeProviders"]
7:I[4080,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],""]
8:I[9032,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],""]
a:I[8173,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"Image"]
b:I[509,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarButton"]
c:I[1398,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
d:I[7606,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
e:I[7510,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
f:I[8976,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
4:["slug","docker/union-filesystem","c"]
0:["Ts-6BBsjdSlBnGT_Ikyc2",[[["",{"children":["blog",{"children":[["slug","docker/union-filesystem","c"],{"children":["__PAGE__?{\"slug\":[\"docker\",\"union-filesystem\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","docker/union-filesystem","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a9b9096fa657c0d0.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_dd5b2f scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"https://mainjaylai.github.io/favicon.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/manifest.json"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&display=swap","rel":"stylesheet"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=ZCOOL+KuaiLe&family=ZCOOL+QingKe+HuangYou&family=ZCOOL+XiaoWei&display=swap","rel":"stylesheet"}],["$","script",null,{"src":"https://us.umami.is/script.js","async":true}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","meta",null,{"name":"referrer","content":"no-referrer"}],["$","script",null,{"src":"https://cdn.jsdelivr.net/gh/ashishagarwal2023/freegptjs@1.0.2/src/freegpt.min.js"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","suppressHydrationWarning":true,"children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"bbe21cb3-3de3-4ba7-b6de-453053bc6ae8","src":"https://us.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"/search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-5","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"Blog","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","$La",null,{"src":"https://mainjaylai.github.io/favicon.png","width":44,"height":44,"alt":"logo"}]}],["$","div",null,{"className":"hidden h-[44px] text-center text-3xl font-semibold leading-10 sm:block","children":"Blog"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Blog"}],["$","$L9",null,{"href":"/tags","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Tags"}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://mainjaylai.github.io","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"About"}]],["$","$Lb",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lc",null,{}],["$","$Ld",null,{}],["$","$Le",null,{}],["$","$Lf",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:mainjaylai@outlook.com","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/mainjaylai","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitlab.com/JayMain","children":[["$","span",null,{"className":"sr-only","children":"gitlab"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M1022.08 579.712l-57.258667-176.426667-113.664-349.397333a19.413333 19.413333 0 0 0-36.992 0L700.501333 403.2H323.498667L209.877333 53.888C204.074667 35.84 178.56 35.84 172.8 53.76L59.136 403.157333 1.877333 579.712a39.424 39.424 0 0 0 14.122667 43.648L512 983.637333l496-360.234666a39.253333 39.253333 0 0 0 14.08-43.690667"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitee.com/lmj2001","children":[["$","span",null,{"className":"sr-only","children":"gitee"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M512 992C246.895625 992 32 777.104375 32 512S246.895625 32 512 32s480 214.895625 480 480-214.895625 480-480 480z m242.9521875-533.3278125h-272.56875a23.7121875 23.7121875 0 0 0-23.71125 23.7121875l-0.024375 59.255625c0 13.08 10.6078125 23.7121875 23.6878125 23.7121875h165.96c13.104375 0 23.7121875 10.6078125 23.7121875 23.6878125v11.855625a71.1121875 71.1121875 0 0 1-71.1121875 71.1121875h-225.215625a23.7121875 23.7121875 0 0 1-23.6878125-23.7121875V423.1278125a71.1121875 71.1121875 0 0 1 71.0878125-71.1121875h331.824375a23.7121875 23.7121875 0 0 0 23.6878125-23.71125l0.0721875-59.2565625a23.7121875 23.7121875 0 0 0-23.68875-23.7121875H423.08a177.76875 177.76875 0 0 0-177.76875 177.7921875V754.953125c0 13.1034375 10.60875 23.7121875 23.713125 23.7121875h349.63125a159.984375 159.984375 0 0 0 159.984375-159.984375V482.36a23.7121875 23.7121875 0 0 0-23.7121875-23.6878125z"}]}]]}]]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"MainJayLai"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"MainJayLai Blog"}]]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c890694439b2475b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/1ea5cf861ee12a80.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[4347,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
12:I[408,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
13:I[9629,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"深入Docker内部原理 - 联合文件系统\",\"datePublished\":\"2024-11-14T00:00:00.000Z\",\"dateModified\":\"2024-11-14T00:00:00.000Z\",\"description\":\"Docker的联合文件系统（如OverlayFS）通过将多个只读镜像层和一个可写容器层合并为一个虚拟文件系统，实现了高效的资源共享和容器隔离。利用写时复制（CoW）技术，容器只在修改文件时复制数据，节省了存储和提高了性能。理解这些原理有助于优化Docker的使用，尤其是在性能和安全性方面。\",\"image\":\"https://pngimg.com/uploads/github/github_PNG80.png\",\"url\":\"https://blog.mainjay.cloudns.ch/blog/docker/union-filesystem\",\"author\":[{\"@type\":\"Person\",\"name\":\"mainJayLai\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$L11",null,{}],["$","article",null,{"children":["$","div",null,{"children":[["$","header",null,{"children":["$","div",null,{"className":"space-y-1 border-b border-gray-200 pb-10 text-center dark:border-gray-700","children":[["$","div",null,{"className":"beautiful-chinese-title","children":["$","h1",null,{"className":"text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14","children":"深入Docker内部原理 - 联合文件系统"}]}],["$","dl",null,{"children":["$","div",null,{"children":[["$","dt",null,{"className":"sr-only","children":"Published on"}],["$","dd",null,{"className":"text-base font-medium leading-6 text-gray-500 dark:text-gray-400","children":["$","time",null,{"dateTime":"2024-11-14T00:00:00.000Z","children":"November 14, 2024"}]}]]}]}]]}]}],["$","div",null,{"className":"grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:divide-y-0","children":[["$","div",null,{"className":"divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0","children":["$","div",null,{"className":"beautiful-chinese-content prose max-w-none pb-8 pt-10 dark:prose-invert","children":[["$","p",null,{"children":["使用Docker CLI非常简单直观 - 你只需要",["$","code",null,{"className":"custom-code","children":"build"}],"、",["$","code",null,{"className":"custom-code","children":"run"}],"、",["$","code",null,{"className":"custom-code","children":"inspect"}],"、",["$","code",null,{"className":"custom-code","children":"pull"}],"和",["$","code",null,{"className":"custom-code","children":"push"}],"容器和镜像，但你是否想过这个简单接口背后的内部原理是如何工作的？在这个简单的接口背后隐藏着许多很酷的技术，在本文中我们将探索其中之一 —— ",["$","strong",null,{"children":"联合文件系统"}]," —— 所有容器和镜像层背后的底层文件系统..."]}],["$","h2",null,{"className":"content-header","id":"什么是联合文件系统","children":[["$","a",null,{"href":"#什么是联合文件系统","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"什么是联合文件系统？"]}],["$","p",null,{"children":["联合挂载是一种文件系统类型，它可以",["$","strong",null,{"children":"在不修改原始(物理)源的情况下，创造将多个目录内容合并成一个的假象"}],"。当我们可能有相关的文件集存储在不同位置或媒体中，但又想在单个合并视图中显示它们时，这种方式非常有用。例如，将来自远程NFS服务器的多个用户的",["$","code",null,{"className":"custom-code","children":"/home"}],"目录统一到单个目录中，或将拆分的ISO镜像合并为单个完整镜像。"]}],["$","p",null,{"children":"然而，联合挂载或联合文件系统并不是文件系统类型，而是一个具有多种实现的概念。有些实现更快，有些更简单，具有不同的目标或不同的成熟度。在深入具体内容之前，让我们快速了解一下一些比较流行的实现："}],["$","ul",null,{"children":[["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"UnionFS"}]," - 让我们从原始的联合文件系统开始。UnionFS似乎不再积极开发，最新的提交是在2014年8月。你可以在其网站上了解更多信息：",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://unionfs.filesystems.org/","children":"https://unionfs.filesystems.org/"}]," 。"]}]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"aufs"}]," - 原始UnionFS的重新实现，添加了许多新功能，但被拒绝合并到主线Linux内核中。Aufs曾是Ubuntu/Debian上Docker的默认驱动，但被OverlayFS取代(对于Linux内核>4.0)。与其他联合文件系统相比，它有一些优势，这些在 ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://docs.docker.com/storage/storagedriver/aufs-driver/#aufs-and-docker-performance","children":"Docker文档页面"}],"中有描述。"]}]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"OverlayFS"}]," - OverlayFS自Linux内核3.18(2014年10月26日)以来就被包含在其中。这是默认",["$","code",null,{"className":"custom-code","children":"overlay2"}]," Docker驱动使用的文件系统(你可以通过",["$","code",null,{"className":"custom-code","children":"docker system info | grep Storage"}],"来验证)。它通常比aufs性能更好，并且有一些不错的功能，如",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://docs.docker.com/storage/storagedriver/overlayfs-driver/#overlayfs-and-docker-performance","children":"页面缓存共享"}],"。"]}]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"ZFS"}]," - ZFS是由Sun Microsystems(现为Oracle)创建的联合文件系统。它有一些有趣的功能，如分层校验和、原生快照处理和备份/复制，或原生数据压缩和重复数据删除。但是，由于由Oracle维护，它具有非OSS友好的许可证(CDDL)，因此不能作为Linux内核的一部分发布。然而，您可以使用Linux上的ZFS（ZoL）项目，该项目在Docker文档中被描述为健康和成熟的.....但尚未准备好生产。如果你想尝试一下，那么你可以在",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://zfsonlinux.org/","children":"这里"}],"找到它。"]}]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"Btrfs"}]," - 另一种选择是Btrfs，它是包括SUSE、WD或Facebook在内的多家公司的联合项目，根据GPL许可证发布，是Linux内核的一部分。Btrfs是Fedora 33的默认文件系统。它还具有一些有用的功能，如块级操作、碎片整理、可写快照等等。如果你真的想经历切换到Docker非默认存储驱动程序的麻烦，那么Btrfs及其功能和性能可能是你的选择。"]}]}]]}],["$","p",null,{"children":["如果你想更详细地探索这些与Docker相关的驱动程序，你可以在",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://docs.docker.com/engine/storage/drivers/select-storage-driver/","children":"Docker文档"}],"中查看驱动程序的比较。也就是说，除非你真的知道自己在做什么（此时你就不会阅读这篇文章），否则你应该坚持使用默认的",["$","code",null,{"className":"custom-code","children":"overlay2"}],"，这也将在本文的其余部分用于演示。"]}],["$","h2",null,{"className":"content-header","id":"为什么要使用联合文件系统","children":[["$","a",null,{"href":"#为什么要使用联合文件系统","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"为什么要使用联合文件系统？"]}],["$","p",null,{"children":"在前面的部分中，我们提到了这种类型的文件系统可能有用的一些原因，但为什么它对Docker和容器来说是一个好选择呢？"}],["$","p",null,{"children":["我们用来启动容器的许多镜像都相当庞大，无论是72MB的",["$","code",null,{"className":"custom-code","children":"ubuntu"}],"还是133MB的",["$","code",null,{"className":"custom-code","children":"nginx"}],"。每次我们想要从这些镜像创建容器时，分配那么多空间都会非常昂贵。",["$","strong",null,{"children":"多亏了联合文件系统，Docker只需要在镜像顶部创建一个薄层，其余部分可以在所有容器之间共享"}],"。这也提供了减少启动时间的额外好处，因为不需要复制镜像文件和数据。"]}],["$","p",null,{"children":"联合文件系统还提供了隔离性，因为容器对共享镜像层具有只读访问权限。如果它们需要修改任何只读共享文件，它们使用写时复制策略(稍后讨论)将内容复制到其顶部可写层，在那里可以安全地修改。"}],["$","h2",null,{"className":"content-header","id":"它是如何工作的","children":[["$","a",null,{"href":"#它是如何工作的","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"它是如何工作的？"]}],["$","p",null,{"children":["现在是时候问重要的问题了 - 它实际上是如何工作的？从上面描述的所有内容来看，整个联合文件系统可能看起来像某种黑魔法，但实际上并非如此。让我们从解释它在一般(非容器)情况下如何工作开始 - 假设我们想要将两个目录(",["$","code",null,{"className":"custom-code","children":"upper"}],"和",["$","code",null,{"className":"custom-code","children":"lower"}],")联合挂载到同一个挂载点并获得它们的统一视图："]}],["$","$L12",null,{"className":"language-js","children":["$","code",null,{"className":"code-highlight language-js","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"."}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token property-access","children":"├──"}]," upper\n"]}],["$","span",null,{"className":"code-line","children":["│   ├── code",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"py"}],"  # 内容",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token template-string","children":[["$","span",null,{"className":"token string template-punctuation","children":"`"}],["$","span",null,{"className":"token string","children":"print(\"Hello Overlay!\")"}],["$","span",null,{"className":"token string template-punctuation","children":"`"}]]}],"\n"]}],["$","span",null,{"className":"code-line","children":["│   └── script",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"py"}],"\n"]}],["$","span",null,{"className":"code-line","children":"└── lower\n"}],["$","span",null,{"className":"code-line","children":["    ├── code",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"py"}],"  # 内容",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token template-string","children":[["$","span",null,{"className":"token string template-punctuation","children":"`"}],["$","span",null,{"className":"token string","children":"print(\"This is some code...\")"}],["$","span",null,{"className":"token string template-punctuation","children":"`"}]]}],"\n"]}],["$","span",null,{"className":"code-line","children":["    └── config",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"yaml"}],"\n"]}]]}]}],["$","p",null,{"children":["在联合挂载术语中，这些目录被称为分支。每个分支都被分配了优先级。在多个源分支中存在同名文件的情况下，这个优先级用于确定在合并视图中显示哪个文件。查看上面的文件和目录 - 很明显，如果我们尝试覆盖它们，我们将创建这种冲突(",["$","code",null,{"className":"custom-code","children":"code.py"}],"文件)。让我们试试看会出现什么："]}],["$","$L12",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"mount"}]," ",["$","span",null,{"className":"token variable parameter","children":"-t"}]," overlay ",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token variable parameter","children":"-o"}]," ",["$","span",null,{"className":"token variable assign-left","children":"lowerdir"}],["$","span",null,{"className":"token operator","children":"="}],"./lower,",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":["       ",["$","span",null,{"className":"token variable assign-left","children":"upperdir"}],["$","span",null,{"className":"token operator","children":"="}],"./upper,",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":["       ",["$","span",null,{"className":"token variable assign-left","children":"workdir"}],["$","span",null,{"className":"token operator","children":"="}],"./workdir ",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":"    overlay /mnt/merged\n"}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"ls"}]," /mnt/merged\n"]}],["$","span",null,{"className":"code-line","children":"code.py  config.yaml  script.py\n"}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"cat"}]," /mnt/merged/code.py\n"]}],["$","span",null,{"className":"code-line","children":["print",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Hello Overlay!\""}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}]]}]}],["$","p",null,{"children":["在上面的例子中，我们使用带有type ",["$","code",null,{"className":"custom-code","children":"overlay"}],"的",["$","code",null,{"className":"custom-code","children":"mount"}],"命令将",["$","code",null,{"className":"custom-code","children":"lower"}],"目录(只读；较低优先级)和",["$","code",null,{"className":"custom-code","children":"upper"}],"目录(读写；较高优先级)组合成",["$","code",null,{"className":"custom-code","children":"/mnt/merged"}],"中的合并视图。我们还包含了",["$","code",null,{"className":"custom-code","children":"workdir=./workdir"}],"选项，它作为准备",["$","code",null,{"className":"custom-code","children":"lowerdir"}],"和",["$","code",null,{"className":"custom-code","children":"upperdir"}],"合并视图的地方，然后在原子操作中移动到",["$","code",null,{"className":"custom-code","children":"/mnt/merged"}],"。"]}],["$","p",null,{"children":["通过查看上面",["$","code",null,{"className":"custom-code","children":"cat"}],"命令的输出，我们可以看到",["$","code",null,{"className":"custom-code","children":"upper"}],"目录中的文件内容确实在合并视图中具有优先权。"]}],["$","p",null,{"children":"所以，现在我们知道如何合并2个目录，以及在发生冲突时会发生什么，但如果我们尝试修改合并视图中的某些文件会发生什么呢？这就是写时复制(CoW)发挥作用的地方。那么它到底是什么？CoW是一种优化技术，当两个调用者请求相同的资源时，你可以给他们指向相同资源的指针而无需复制它。只有当其中一个调用者试图写入他们的\"副本\"时才需要复制 - 因此称为写时复制。"}],["$","p",null,{"children":["在联合挂载的情况下，这意味着当我们尝试修改共享文件(或只读文件)时，它首先被复制到具有比只读下层分支(",["$","code",null,{"className":"custom-code","children":"lowerdir"}],")更高优先级的顶部可写分支(",["$","code",null,{"className":"custom-code","children":"upperdir"}],")。然后当它在可写分支中时，它可以安全地修改，并且由于顶层具有更高的优先级，其新内容将在合并视图中可见。"]}],["$","p",null,{"children":"我们可能想要执行的最后一个操作是删除文件。要执行\"删除\"，在可写分支中创建一个白出文件来清除我们想要删除的文件。这意味着该文件实际上并没有被删除，而是在合并视图中被隐藏。"}],["$","p",null,{"children":["我们讨论了很多关于联合挂载如何在一般情况下工作，但这一切与Docker及其容器有什么关系？要将它们联系在一起，让我们看看Docker的分层架构。容器的沙箱由一些镜像分支 - 或者我们都知道的 - 层组成。这些层是合并视图的只读(",["$","code",null,{"className":"custom-code","children":"lowerdir"}],")部分，而容器层是薄的可写顶部(",["$","code",null,{"className":"custom-code","children":"upperdir"}],")部分。"]}],["$","p",null,{"children":["除了这个架构术语之外，它实际上是相同的东西 - 你从注册表中拉取的镜像层是",["$","code",null,{"className":"custom-code","children":"lowerdir"}],"，当你运行容器时，",["$","code",null,{"className":"custom-code","children":"upperdir"}],"被附加到镜像层的顶部，为你的容器提供可写工作空间。听起来很简单，对吧？那么，让我们试试看！"]}],["$","h2",null,{"className":"content-header","id":"实际尝试","children":[["$","a",null,{"href":"#实际尝试","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"实际尝试"]}],["$","p",null,{"children":"为了演示Docker如何使用OverlayFS，我们将尝试模拟Docker如何挂载容器和镜像层。在此之前，我们首先需要清理我们的工作空间并获取一个镜像来尝试："}],["$","$L12",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"docker"}]," image prune ",["$","span",null,{"className":"token variable parameter","children":"-af"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":".."}],".\n"]}],["$","span",null,{"className":"code-line","children":["Total reclaimed space: ",["$","span",null,{"className":"token punctuation","children":".."}],".MB\n"]}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"docker"}]," pull nginx\n"]}],["$","span",null,{"className":"code-line","children":"Using default tag: latest\n"}],["$","span",null,{"className":"code-line","children":"latest: Pulling from library/nginx\n"}],["$","span",null,{"className":"code-line","children":"a076a628af6f: Pull complete\n"}],["$","span",null,{"className":"code-line","children":"0732ab25fa22: Pull complete\n"}],["$","span",null,{"className":"code-line","children":"d7f36f6fe38f: Pull complete\n"}],["$","span",null,{"className":"code-line","children":"f72584a26f32: Pull complete\n"}],["$","span",null,{"className":"code-line","children":"7125e4df9063: Pull complete\n"}],["$","span",null,{"className":"code-line","children":"Digest: sha256:10b8cc432d56da8b61b070f4c7d2543a9ed17c2b23010b43af434fd40e2ca4aa\n"}],["$","span",null,{"className":"code-line","children":["Status: Downloaded newer image ",["$","span",null,{"className":"token keyword","children":"for"}]," nginx:latest\n"]}],["$","span",null,{"className":"code-line","children":"docker.io/library/nginx:latest\n"}]]}]}],["$","p",null,{"children":["我们有了一个镜像(",["$","code",null,{"className":"custom-code","children":"nginx"}],")可以玩，接下来，让我们检查它的层。我们可以通过在镜像上运行",["$","code",null,{"className":"custom-code","children":"docker inspect"}],"并检查",["$","code",null,{"className":"custom-code","children":"GraphDriver"}],"字段，或者通过浏览",["$","code",null,{"className":"custom-code","children":"/var/lib/docker/overlay2"}],"目录(所有镜像层都存储在这里)来检查镜像层。让我们两个都试试，看看里面有什么："]}],["$","$L12",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token builtin class-name","children":"cd"}]," /var/lib/docker/overlay2\n"]}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"ls"}]," ",["$","span",null,{"className":"token variable parameter","children":"-l"}],"\n"]}],["$","span",null,{"className":"code-line","children":["total ",["$","span",null,{"className":"token number","children":"0"}],"\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"4"}]," root root     ",["$","span",null,{"className":"token number","children":"55"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"3"}]," root root     ",["$","span",null,{"className":"token number","children":"47"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 410c05aaa30dd006fc47d8c23ba0d173c6d305e4d93fdc3d9abcad9e78862b46\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"4"}]," root root     ",["$","span",null,{"className":"token number","children":"72"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 685374e39a6aac7a346963bb51e2fc7b9f5e2bdbb5eac6c76ccdaef807abc25e\n"]}],["$","span",null,{"className":"code-line","children":["brw-------. ",["$","span",null,{"className":"token number","children":"1"}]," root root ",["$","span",null,{"className":"token number","children":"253"}],", ",["$","span",null,{"className":"token number","children":"0"}]," Jan ",["$","span",null,{"className":"token number","children":"31"}]," ",["$","span",null,{"className":"token number","children":"18"}],":15 backingFsBlockDev\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"4"}]," root root     ",["$","span",null,{"className":"token number","children":"72"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 d487622ece100972afba76fda13f56029dec5ec26ffcf552191f6241e05cab7e\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"4"}]," root root     ",["$","span",null,{"className":"token number","children":"72"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 fb18be50518ec9b37faf229f254bbb454f7663f1c9c45af9f272829172015505\n"]}],["$","span",null,{"className":"code-line","children":["drwx------. ",["$","span",null,{"className":"token number","children":"2"}]," root root    ",["$","span",null,{"className":"token number","children":"176"}]," Feb  ",["$","span",null,{"className":"token number","children":"6"}]," ",["$","span",null,{"className":"token number","children":"19"}],":19 l\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":"~ $ tree 3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/\n"}],["$","span",null,{"className":"code-line","children":"3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/\n"}],["$","span",null,{"className":"code-line","children":["├── ",["$","span",null,{"className":"token function","children":"diff"}],"\n"]}],["$","span",null,{"className":"code-line","children":"│   └── docker-entrypoint.d\n"}],["$","span",null,{"className":"code-line","children":["│       └── ",["$","span",null,{"className":"token number","children":"20"}],"-envsubst-on-templates.sh\n"]}],["$","span",null,{"className":"code-line","children":["├── ",["$","span",null,{"className":"token function","children":"link"}],"\n"]}],["$","span",null,{"className":"code-line","children":"├── lower\n"}],["$","span",null,{"className":"code-line","children":"└── work\n"}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"docker"}]," inspect nginx ",["$","span",null,{"className":"token operator","children":"|"}]," jq .",["$","span",null,{"className":"token punctuation","children":"["}],["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":"]"}],".GraphDriver.Data\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"LowerDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/fb18be50518ec9b37faf229f254bbb454f7663f1c9c45af9f272829172015505/diff:\n"}]]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/d487622ece100972afba76fda13f56029dec5ec26ffcf552191f6241e05cab7e/diff:\n"}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/685374e39a6aac7a346963bb51e2fc7b9f5e2bdbb5eac6c76ccdaef807abc25e/diff:\n"}]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/410c05aaa30dd006fc47d8c23ba0d173c6d305e4d93fdc3d9abcad9e78862b46/diff\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"MergedDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/merged\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"UpperDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/diff\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"WorkDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/work\""}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":["查看上面的输出，它看起来与我们在",["$","code",null,{"className":"custom-code","children":"mount"}],"命令中看到的非常相似，对吗？更具体地说："]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"LowerDir"}],": 是由冒号分隔的只读镜像层目录"]}],["$","li",null,{"children":[["$","strong",null,{"children":"MergedDir"}],": 所有来自镜像和容器的层的合并视图"]}],["$","li",null,{"children":[["$","strong",null,{"children":"UpperDir"}],": 写入更改的读写层"]}],["$","li",null,{"children":[["$","strong",null,{"children":"WorkDir"}],": Linux OverlayFS用来准备合并视图的工作目录"]}]]}],["$","p",null,{"children":"接下来，让我们更进一步，运行一个容器并检查它的层："}],["$","$L12",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"docker"}]," run ",["$","span",null,{"className":"token variable parameter","children":"-d"}]," ",["$","span",null,{"className":"token variable parameter","children":"--name"}]," container nginx\n"]}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"docker"}]," inspect container ",["$","span",null,{"className":"token operator","children":"|"}]," jq .",["$","span",null,{"className":"token punctuation","children":"["}],["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":"]"}],".GraphDriver.Data\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"LowerDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4-init/diff:\n"}]]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/diff:\n"}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/fb18be50518ec9b37faf229f254bbb454f7663f1c9c45af9f272829172015505/diff:\n"}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/d487622ece100972afba76fda13f56029dec5ec26ffcf552191f6241e05cab7e/diff:\n"}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/685374e39a6aac7a346963bb51e2fc7b9f5e2bdbb5eac6c76ccdaef807abc25e/diff:\n"}]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token string","children":"    /var/lib/docker/overlay2/410c05aaa30dd006fc47d8c23ba0d173c6d305e4d93fdc3d9abcad9e78862b46/diff\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"MergedDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/merged\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"UpperDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/diff\""}],",\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token string","children":"\"WorkDir\""}],["$","span",null,{"className":"token builtin class-name","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/work\""}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ tree ",["$","span",null,{"className":"token variable parameter","children":"-l"}]," ",["$","span",null,{"className":"token number","children":"3"}]," /var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/diff  ",["$","span",null,{"className":"token comment","children":"# The UpperDir"}],"\n"]}],["$","span",null,{"className":"code-line","children":"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/diff\n"}],["$","span",null,{"className":"code-line","children":"├── etc\n"}],["$","span",null,{"className":"code-line","children":"│   └── nginx\n"}],["$","span",null,{"className":"code-line","children":"│       └── conf.d\n"}],["$","span",null,{"className":"code-line","children":"│           └── default.conf\n"}],["$","span",null,{"className":"code-line","children":"├── run\n"}],["$","span",null,{"className":"code-line","children":"│   └── nginx.pid\n"}],["$","span",null,{"className":"code-line","children":"└── var\n"}],["$","span",null,{"className":"code-line","children":"    └── cache\n"}],["$","span",null,{"className":"code-line","children":"        └── nginx\n"}],["$","span",null,{"className":"code-line","children":"            ├── client_temp\n"}],["$","span",null,{"className":"code-line","children":"            ├── fastcgi_temp\n"}],["$","span",null,{"className":"code-line","children":"            ├── proxy_temp\n"}],["$","span",null,{"className":"code-line","children":"            ├── scgi_temp\n"}],["$","span",null,{"className":"code-line","children":"            └── uwsgi_temp\n"}]]}]}],["$","p",null,{"children":["上面的输出显示，之前在",["$","code",null,{"className":"custom-code","children":"docker inspect nginx"}],"输出中列为",["$","code",null,{"className":"custom-code","children":"MergedDir"}],"、",["$","code",null,{"className":"custom-code","children":"UpperDir"}],"和",["$","code",null,{"className":"custom-code","children":"WorkDir"}],"的相同目录(ID为",["$","code",null,{"className":"custom-code","children":"3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd"}],")现在是容器的",["$","code",null,{"className":"custom-code","children":"LowerDir"}],"的一部分。这里的",["$","code",null,{"className":"custom-code","children":"LowerDir"}],"由所有",["$","code",null,{"className":"custom-code","children":"nginx"}],"镜像层堆叠在一起组成。在它们之上是",["$","code",null,{"className":"custom-code","children":"UpperDir"}],"中的可写层，其中包含",["$","code",null,{"className":"custom-code","children":"/etc"}],"、",["$","code",null,{"className":"custom-code","children":"/run"}],"和",["$","code",null,{"className":"custom-code","children":"/var"}],"。此外，如果我们列出上面的",["$","code",null,{"className":"custom-code","children":"MergedDir"}],"，你会看到容器可用的整个文件系统，包括来自",["$","code",null,{"className":"custom-code","children":"UpperDir"}],"和",["$","code",null,{"className":"custom-code","children":"LowerDir"}],"的所有内容。"]}],["$","p",null,{"children":"最后，为了模拟Docker的行为，我们可以使用这些相同的目录手动创建我们自己的合并视图："}],["$","$L12",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"mount"}]," ",["$","span",null,{"className":"token variable parameter","children":"-t"}]," overlay ",["$","span",null,{"className":"token variable parameter","children":"-o"}]," ",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token variable assign-left","children":"lowerdir"}],["$","span",null,{"className":"token operator","children":"="}],"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4-init/diff:\n"]}],["$","span",null,{"className":"code-line","children":"    /var/lib/docker/overlay2/3d963d191b2101b3406348217f4257d7374aa4b4a73b4a6dd4ab0f365d38dfbd/diff:\n"}],["$","span",null,{"className":"code-line","children":"    /var/lib/docker/overlay2/fb18be50518ec9b37faf229f254bbb454f7663f1c9c45af9f272829172015505/diff:\n"}],["$","span",null,{"className":"code-line","children":"    /var/lib/docker/overlay2/d487622ece100972afba76fda13f56029dec5ec26ffcf552191f6241e05cab7e/diff:\n"}],["$","span",null,{"className":"code-line","children":"    /var/lib/docker/overlay2/685374e39a6aac7a346963bb51e2fc7b9f5e2bdbb5eac6c76ccdaef807abc25e/diff:\n"}],["$","span",null,{"className":"code-line","children":["    /var/lib/docker/overlay2/410c05aaa30dd006fc47d8c23ba0d173c6d305e4d93fdc3d9abcad9e78862b46/diff,",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token variable assign-left","children":"upperdir"}],["$","span",null,{"className":"token operator","children":"="}],"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/diff,",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token variable assign-left","children":"workdir"}],["$","span",null,{"className":"token operator","children":"="}],"/var/lib/docker/overlay2/59bcd145c580de3bb3b2b9c6102e4d52d0ddd1ed598e742b3a0e13e261ee6eb4/work ",["$","span",null,{"className":"token punctuation","children":"\\"}],"\n"]}],["$","span",null,{"className":"code-line","children":"overlay /mnt/merged\n"}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"ls"}]," /mnt/merged\n"]}],["$","span",null,{"className":"code-line","children":"bin   dev                  docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  var\n"}],["$","span",null,{"className":"code-line","children":"boot  docker-entrypoint.d  etc                   lib   media  opt  root  sbin  sys  usr\n"}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["~ $ ",["$","span",null,{"className":"token function","children":"umount"}]," overlay\n"]}]]}]}],["$","p",null,{"children":["在这里，我们只是从前面的片段中获取值并将它们传递给",["$","code",null,{"className":"custom-code","children":"mount"}],"命令中的相应参数，唯一的区别是我们使用",["$","code",null,{"className":"custom-code","children":"/mnt/merged"}],"而不是",["$","code",null,{"className":"custom-code","children":"/var/lib/docker/overlay2/.../merged"}],"作为合并视图。"]}],["$","p",null,{"children":["这就是Docker中整个OverlayFS的本质 - 跨多个堆叠层的单个",["$","code",null,{"className":"custom-code","children":"mount"}],"命令。以下是负责此操作的Docker代码的一部分 —— ",["$","code",null,{"className":"custom-code","children":"lowerdir=...,upperdir=...,workdir=..."}],"值的替换，然后是",["$","code",null,{"className":"custom-code","children":"unix.Mount"}],"："]}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"code-highlight language-go","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// https://github.com/moby/moby/blob/1ef1cc8388165b2b848f9b3f53ec91c87de09f63/daemon/graphdriver/overlay2/overlay.go#L580"}],"\n"]}],["$","span",null,{"className":"code-line","children":["opts ",["$","span",null,{"className":"token operator","children":":="}]," fmt",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Sprintf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"lowerdir=%s,upperdir=%s,workdir=%s\""}],["$","span",null,{"className":"token punctuation","children":","}]," strings",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Join"}],["$","span",null,{"className":"token punctuation","children":"("}],"absLowers",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token string","children":"\":\""}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":","}]," path",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Join"}],["$","span",null,{"className":"token punctuation","children":"("}],"dir",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token string","children":"\"diff\""}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":","}]," path",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Join"}],["$","span",null,{"className":"token punctuation","children":"("}],"dir",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token string","children":"\"work\""}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["mountData ",["$","span",null,{"className":"token operator","children":":="}]," label",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"FormatMountLabel"}],["$","span",null,{"className":"token punctuation","children":"("}],"opts",["$","span",null,{"className":"token punctuation","children":","}]," mountLabel",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["mount ",["$","span",null,{"className":"token operator","children":":="}]," unix",["$","span",null,{"className":"token punctuation","children":"."}],"Mount\n"]}],["$","span",null,{"className":"code-line","children":["mountTarget ",["$","span",null,{"className":"token operator","children":":="}]," mergedDir\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["rootUID",["$","span",null,{"className":"token punctuation","children":","}]," rootGID",["$","span",null,{"className":"token punctuation","children":","}]," err ",["$","span",null,{"className":"token operator","children":":="}]," idtools",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"GetRootUIDGID"}],["$","span",null,{"className":"token punctuation","children":"("}],"d",["$","span",null,{"className":"token punctuation","children":"."}],"uidMaps",["$","span",null,{"className":"token punctuation","children":","}]," d",["$","span",null,{"className":"token punctuation","children":"."}],"gidMaps",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// ..."}],"\n"]}]]}]}],["$","h2",null,{"className":"content-header","id":"结论","children":[["$","a",null,{"href":"#结论","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"结论"]}],["$","p",null,{"children":[["$","strong",null,{"children":"从外部看Docker接口时，它可能看起来像一个包含许多晦涩技术的黑盒子。这些技术虽然晦涩，但却非常有趣和有用。虽然你不需要了解它们就能有效地使用Docker，但在我看来，学习和理解它们仍然是一项值得的努力"}],"。对工具有更深入的理解可以让你更容易做出正确的决定 - 在这种情况下 - 关于性能优化或安全影响。作为额外的好处，它还能帮助你发现一些很酷的技术，这些技术在未来可能有更多的用途。"]}]]}]}],["$","div",null,{"className":"pb-6 pt-6 text-center text-gray-700 dark:text-gray-300","id":"comment","children":["$","$L13",null,{"slug":"docker/union-filesystem"}]}],["$","footer",null,{"children":["$","div",null,{"className":"flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base","children":[["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/frontend/javascript-function","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Previous post: 深入探讨 JavaScript 中的函数式编程","children":["← ","深入探讨 JavaScript 中的函数式编程"]}]}],["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/go/redis-ratelimit","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Next post: 使用Redis实现Golang API限流","children":["使用Redis实现Golang API限流"," →"]}]}]]}]}]]}]]}]}]]}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"深入Docker内部原理 - 联合文件系统"}],["$","meta","3",{"name":"description","content":"Docker的联合文件系统（如OverlayFS）通过将多个只读镜像层和一个可写容器层合并为一个虚拟文件系统，实现了高效的资源共享和容器隔离。利用写时复制（CoW）技术，容器只在修改文件时复制数据，节省了存储和提高了性能。理解这些原理有助于优化Docker的使用，尤其是在性能和安全性方面。"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://blog.mainjay.cloudns.ch/blog/docker/union-filesystem"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mainjay.cloudns.ch/feed.xml"}],["$","meta","8",{"property":"og:title","content":"深入Docker内部原理 - 联合文件系统"}],["$","meta","9",{"property":"og:description","content":"Docker的联合文件系统（如OverlayFS）通过将多个只读镜像层和一个可写容器层合并为一个虚拟文件系统，实现了高效的资源共享和容器隔离。利用写时复制（CoW）技术，容器只在修改文件时复制数据，节省了存储和提高了性能。理解这些原理有助于优化Docker的使用，尤其是在性能和安全性方面。"}],["$","meta","10",{"property":"og:url","content":"https://blog.mainjay.cloudns.ch/blog/docker/union-filesystem"}],["$","meta","11",{"property":"og:site_name","content":"MainJayLai Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","14",{"property":"og:type","content":"article"}],["$","meta","15",{"property":"article:published_time","content":"2024-11-14T00:00:00.000Z"}],["$","meta","16",{"property":"article:modified_time","content":"2024-11-14T00:00:00.000Z"}],["$","meta","17",{"property":"article:author","content":"mainJayLai"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"深入Docker内部原理 - 联合文件系统"}],["$","meta","20",{"name":"twitter:description","content":"Docker的联合文件系统（如OverlayFS）通过将多个只读镜像层和一个可写容器层合并为一个虚拟文件系统，实现了高效的资源共享和容器隔离。利用写时复制（CoW）技术，容器只在修改文件时复制数据，节省了存储和提高了性能。理解这些原理有助于优化Docker的使用，尤其是在性能和安全性方面。"}],["$","meta","21",{"name":"twitter:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
