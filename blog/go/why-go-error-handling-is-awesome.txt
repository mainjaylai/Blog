3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"ThemeProviders"]
7:I[4080,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],""]
8:I[9032,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],""]
a:I[8173,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"Image"]
b:I[509,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarButton"]
c:I[1398,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
d:I[7606,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
e:I[7510,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
f:I[8976,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
4:["slug","go/why-go-error-handling-is-awesome","c"]
0:["Ts-6BBsjdSlBnGT_Ikyc2",[[["",{"children":["blog",{"children":[["slug","go/why-go-error-handling-is-awesome","c"],{"children":["__PAGE__?{\"slug\":[\"go\",\"why-go-error-handling-is-awesome\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","go/why-go-error-handling-is-awesome","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a9b9096fa657c0d0.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_dd5b2f scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"https://mainjaylai.github.io/favicon.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/manifest.json"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&display=swap","rel":"stylesheet"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=ZCOOL+KuaiLe&family=ZCOOL+QingKe+HuangYou&family=ZCOOL+XiaoWei&display=swap","rel":"stylesheet"}],["$","script",null,{"src":"https://us.umami.is/script.js","async":true}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","meta",null,{"name":"referrer","content":"no-referrer"}],["$","script",null,{"src":"https://cdn.jsdelivr.net/gh/ashishagarwal2023/freegptjs@1.0.2/src/freegpt.min.js"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","suppressHydrationWarning":true,"children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"bbe21cb3-3de3-4ba7-b6de-453053bc6ae8","src":"https://us.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"/search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-5","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"Blog","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","$La",null,{"src":"https://mainjaylai.github.io/favicon.png","width":44,"height":44,"alt":"logo"}]}],["$","div",null,{"className":"hidden h-[44px] text-center text-3xl font-semibold leading-10 sm:block","children":"Blog"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Blog"}],["$","$L9",null,{"href":"/tags","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Tags"}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://mainjaylai.github.io","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"About"}]],["$","$Lb",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lc",null,{}],["$","$Ld",null,{}],["$","$Le",null,{}],["$","$Lf",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:mainjaylai@outlook.com","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/mainjaylai","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitlab.com/JayMain","children":[["$","span",null,{"className":"sr-only","children":"gitlab"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M1022.08 579.712l-57.258667-176.426667-113.664-349.397333a19.413333 19.413333 0 0 0-36.992 0L700.501333 403.2H323.498667L209.877333 53.888C204.074667 35.84 178.56 35.84 172.8 53.76L59.136 403.157333 1.877333 579.712a39.424 39.424 0 0 0 14.122667 43.648L512 983.637333l496-360.234666a39.253333 39.253333 0 0 0 14.08-43.690667"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitee.com/lmj2001","children":[["$","span",null,{"className":"sr-only","children":"gitee"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M512 992C246.895625 992 32 777.104375 32 512S246.895625 32 512 32s480 214.895625 480 480-214.895625 480-480 480z m242.9521875-533.3278125h-272.56875a23.7121875 23.7121875 0 0 0-23.71125 23.7121875l-0.024375 59.255625c0 13.08 10.6078125 23.7121875 23.6878125 23.7121875h165.96c13.104375 0 23.7121875 10.6078125 23.7121875 23.6878125v11.855625a71.1121875 71.1121875 0 0 1-71.1121875 71.1121875h-225.215625a23.7121875 23.7121875 0 0 1-23.6878125-23.7121875V423.1278125a71.1121875 71.1121875 0 0 1 71.0878125-71.1121875h331.824375a23.7121875 23.7121875 0 0 0 23.6878125-23.71125l0.0721875-59.2565625a23.7121875 23.7121875 0 0 0-23.68875-23.7121875H423.08a177.76875 177.76875 0 0 0-177.76875 177.7921875V754.953125c0 13.1034375 10.60875 23.7121875 23.713125 23.7121875h349.63125a159.984375 159.984375 0 0 0 159.984375-159.984375V482.36a23.7121875 23.7121875 0 0 0-23.7121875-23.6878125z"}]}]]}]]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"MainJayLai"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"MainJayLai Blog"}]]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c890694439b2475b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/1ea5cf861ee12a80.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[4347,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
12:I[408,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
13:I[9629,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"为什么 Go 语言的错误处理如此出色\",\"datePublished\":\"2025-03-28T00:00:00.000Z\",\"dateModified\":\"2025-03-28T00:00:00.000Z\",\"description\":\"Go 的 if err != nil 错误处理模式虽备受争议，却是其设计优势所在。通过将错误视为值，Go 迫使开发者显式处理错误情况，避免了隐藏的控制流，提供了清晰的错误传播链。这种方式虽看似繁琐，却让程序更可靠、透明、可预测，并赋予开发者对错误处理的完全控制权。\",\"image\":\"https://pngimg.com/uploads/github/github_PNG80.png\",\"url\":\"https://blog.mainjay.cloudns.ch/blog/go/why-go-error-handling-is-awesome\",\"author\":[{\"@type\":\"Person\",\"name\":\"mainJayLai\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$L11",null,{}],["$","article",null,{"children":["$","div",null,{"children":[["$","header",null,{"children":["$","div",null,{"className":"space-y-1 border-b border-gray-200 pb-10 text-center dark:border-gray-700","children":[["$","div",null,{"className":"beautiful-chinese-title","children":["$","h1",null,{"className":"text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14","children":"为什么 Go 语言的错误处理如此出色"}]}],["$","dl",null,{"children":["$","div",null,{"children":[["$","dt",null,{"className":"sr-only","children":"Published on"}],["$","dd",null,{"className":"text-base font-medium leading-6 text-gray-500 dark:text-gray-400","children":["$","time",null,{"dateTime":"2025-03-28T00:00:00.000Z","children":"March 28, 2025"}]}]]}]}]]}]}],["$","div",null,{"className":"grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:divide-y-0","children":[["$","div",null,{"className":"divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0","children":["$","div",null,{"className":"beautiful-chinese-content prose max-w-none pb-8 pt-10 dark:prose-invert","children":[["$","p",null,{"children":"Go 语言那备受争议的错误处理方式已经引起了编程语言圈外人士的广泛关注，它经常被视为该语言最值得商榷的设计决策之一。如果你查看 GitHub 上任何用 Go 编写的项目，几乎可以保证你会在代码库中看到这样的代码行比其他任何内容都更频繁："}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"language-go code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"return"}]," err\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":"虽然对于语言新手来说，这可能看起来多余且不必要，但 Go 语言将错误视为一等公民（值）的原因在编程语言理论中有着深厚的根基，也与 Go 语言本身的主要目标密切相关。虽然已经有许多努力试图改变或改进 Go 处理错误的方式，但到目前为止，有一个提案在所有其他提案中胜出："}],["$","p",null,{"children":["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://github.com/golang/go/issues/32825","children":["保持",["$","code",null,{"className":"custom-code","children":"if err != nil"}],"不变！"]}]}],["$","h2",null,{"className":"content-header","id":"go-的错误处理哲学","children":[["$","a",null,{"href":"#go-的错误处理哲学","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"Go 的错误处理哲学"]}],["$","p",null,{"children":"Go 关于错误处理的哲学迫使开发者将错误作为他们编写的大多数函数中的一等公民。即使你使用类似以下方式忽略错误："}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"language-go code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"func"}]," ",["$","span",null,{"className":"token function","children":"getUserFromDB"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token operator","children":"*"}],"User",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token builtin","children":"error"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token operator","children":"..."}]," ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"func"}]," ",["$","span",null,{"className":"token function","children":"main"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    user",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token boolean","children":"_"}]," ",["$","span",null,{"className":"token operator","children":":="}]," ",["$","span",null,{"className":"token function","children":"getUserFromDB"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":"大多数代码检查工具或 IDE 都会发现你正在忽略一个错误，而且这肯定会在代码审查中被你的团队成员发现。然而，在其他语言中，可能并不清楚你的代码没有在 try-catch 代码块中处理潜在的异常，这对控制流的处理完全不透明。"}],["$","p",null,{"children":"如果你以标准方式在 Go 中处理错误，你将获得以下好处："}],["$","ul",null,{"children":[["$","li",null,{"children":"没有隐藏的控制流"}],["$","li",null,{"children":"没有意外的未捕获异常日志爆满你的终端（除了通过 panic 导致的实际程序崩溃）"}],["$","li",null,{"children":"完全控制代码中的错误，将其作为你可以处理、返回并任意操作的值"}]]}],["$","p",null,{"children":[["$","code",null,{"className":"custom-code","children":"func f() (value, error)"}],"的语法不仅易于教给新手，而且在任何 Go 项目中都是一个标准，确保了一致性。"]}],["$","p",null,{"children":["重要的是要注意，Go 的错误处理语法并不强制你处理程序可能抛出的每个错误。Go 只是提供了一个模式，确保你将错误视为程序流程中的关键部分，仅此而已。在程序结束时，如果发生错误，你使用",["$","code",null,{"className":"custom-code","children":"err != nil"}],"发现了它，但你的应用程序没有采取可行的措施来处理它，那么无论如何你都会遇到麻烦 - Go 无法拯救你。让我们看一个例子："]}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"language-go code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":":="}]," ",["$","span",null,{"className":"token function","children":"criticalDatabaseOperation"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token comment","children":"// 只记录错误而不返回它以停止控制流（不好！）"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    log",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Printf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Something went wrong in the DB: %v\""}],["$","span",null,{"className":"token punctuation","children":","}]," err",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token comment","children":"// 我们应该在这一行下面添加`return`！"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":":="}]," ",["$","span",null,{"className":"token function","children":"saveUser"}],["$","span",null,{"className":"token punctuation","children":"("}],"user",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"return"}]," fmt",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Errorf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Could not save user: %w\""}],["$","span",null,{"className":"token punctuation","children":","}]," err",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":["如果在调用",["$","code",null,{"className":"custom-code","children":"criticalDatabaseOperation()"}],"时出错，",["$","code",null,{"className":"custom-code","children":"err != nil"}],"成立，我们除了记录它之外什么都没做！我们可能遇到数据损坏或其他意外问题，而我们没有智能地处理它，无论是通过重试函数调用、取消后续程序流程，还是在最坏的情况下关闭程序。Go 并不神奇，无法让你摆脱这些情况。Go 只提供了一种返回和使用错误作为值的标准方法，但你仍然需要自己弄清楚如何处理这些错误。"]}],["$","h2",null,{"className":"content-header","id":"其他语言的做法抛出异常","children":[["$","a",null,{"href":"#其他语言的做法抛出异常","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"其他语言的做法：抛出异常"]}],["$","p",null,{"children":"在 JavaScript 的 Node.js 运行时等环境中，你可以按照以下方式构建程序，这被称为抛出异常："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"code-highlight language-javascript","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword control-flow","children":"try"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token function","children":"criticalOperation1"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token function","children":"criticalOperation2"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token function","children":"criticalOperation3"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}]," ",["$","span",null,{"className":"token keyword control-flow","children":"catch"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"e",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"error"}],["$","span",null,{"className":"token punctuation","children":"("}],"e",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":"如果这些函数中的任何一个发生错误，错误的堆栈跟踪将在运行时弹出并记录到控制台，但没有明确的、程序化的处理来说明出了什么问题。"}],["$","p",null,{"children":["你的",["$","code",null,{"className":"custom-code","children":"criticalOperation"}],"函数不需要明确处理错误流，因为 try 块内发生的任何异常都会在运行时与出错的堆栈跟踪一起引发。基于异常的语言的一个好处是，与 Go 相比，即使未处理的异常也会在运行时通过堆栈跟踪引发（如果发生的话）。在 Go 中，可能完全不处理关键错误，这可能会更糟。Go 提供了对错误处理的完全控制，但也提供了完全的责任。"]}],["$","p",null,{"children":"异常肯定不是其他语言处理错误的唯一方式。例如，Rust 使用选项类型和模式匹配来查找错误条件，利用一些不错的语法糖来实现类似的结果，这是一种很好的折衷方案。"}],["$","h2",null,{"className":"content-header","id":"为什么-go-不使用异常进行错误处理","children":[["$","a",null,{"href":"#为什么-go-不使用异常进行错误处理","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"为什么 Go 不使用异常进行错误处理"]}],["$","h3",null,{"className":"content-header","id":"go-的禅理","children":[["$","a",null,{"href":"#go-的禅理","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"Go 的禅理"]}],["$","p",null,{"children":"Go 的禅理提到了两个重要的格言："}],["$","ul",null,{"children":[["$","li",null,{"children":["$","em",null,{"children":"简单性很重要"}]}],["$","li",null,{"children":["$","em",null,{"children":"为失败而非成功做计划"}]}]]}],["$","p",null,{"children":["对所有返回",["$","code",null,{"className":"custom-code","children":"(value, error)"}],"的函数使用简单的",["$","code",null,{"className":"custom-code","children":"if err != nil"}],"片段，有助于确保首先考虑程序中的失败情况。你不需要纠结于复杂的、嵌套的 try-catch 块，这些块需要适当地处理所有可能引发的异常。"]}],["$","h3",null,{"className":"content-header","id":"基于异常的代码通常不透明","children":[["$","a",null,{"href":"#基于异常的代码通常不透明","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"基于异常的代码通常不透明"]}],["$","p",null,{"children":"然而，使用基于异常的代码，你被迫意识到代码可能引发异常的每种情况，而实际上并不处理它们，因为它们将被 try-catch 块捕获。也就是说，它鼓励程序员从不检查错误，因为知道至少在运行时会自动处理一些异常（如果发生的话）。"}],["$","p",null,{"children":"用基于异常的编程语言编写的函数可能经常看起来像这样："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"code-highlight language-javascript","children":[["$","span",null,{"className":"code-line","children":["item ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"getFromDB"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["item",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":["$","span",null,{"className":"token maybe-class-name","children":"Value"}]}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"400"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"saveToDB"}],["$","span",null,{"className":"token punctuation","children":"("}],"item",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["item",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":["$","span",null,{"className":"token maybe-class-name","children":"Text"}]}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token string","children":"'price changed'"}],"\n"]}]]}]}],["$","p",null,{"children":["这段代码没有确保异常得到正确处理。也许使上面的代码意识到异常的区别在于切换",["$","code",null,{"className":"custom-code","children":"saveToDB(item)"}],"和",["$","code",null,{"className":"custom-code","children":"item.Text = 'price changed'"}],"的顺序，这是不透明的，难以推理，并且可能鼓励一些懒惰的编程习惯。在函数式编程术语中，这被称为违反引用透明性。微软 2005 年工程博客中的",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://devblogs.microsoft.com/oldnewthing/?p=36693","children":"这篇文章"}],"今天仍然适用，即："]}],["$","p",null,{"children":["$","em",null,{"children":"\"我的观点不是异常不好。我的观点是异常太难了，我不够聪明，无法处理它们。\""}]}],["$","h2",null,{"className":"content-header","id":"go-错误语法的好处","children":[["$","a",null,{"href":"#go-错误语法的好处","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"Go 错误语法的好处"]}],["$","h3",null,{"className":"content-header","id":"轻松创建可操作的错误链","children":[["$","a",null,{"href":"#轻松创建可操作的错误链","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"轻松创建可操作的错误链"]}],["$","p",null,{"children":[["$","code",null,{"className":"custom-code","children":"if err != nil"}],"模式的一个超能力是它如何允许轻松创建错误链，使其穿越程序层次结构直到需要处理它们的地方。例如，由程序的 ",["$","code",null,{"className":"custom-code","children":"main"}]," 函数处理的常见 Go 错误可能如下所示："]}],["$","$L12",null,{"className":"language-js","children":["$","code",null,{"className":"code-highlight language-js","children":["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token constant","children":"ERROR"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token maybe-class-name","children":"Could"}]," not create user",["$","span",null,{"className":"token operator","children":":"}]," could not check ",["$","span",null,{"className":"token keyword control-flow","children":"if"}]," user already exists ",["$","span",null,{"className":"token keyword","children":"in"}]," ",["$","span",null,{"className":"token constant","children":"DB"}],["$","span",null,{"className":"token operator","children":":"}]," could not establish database connection",["$","span",null,{"className":"token operator","children":":"}]," no internet\n"]}]}]}],["$","p",null,{"children":"上述错误是（a）清晰的，（b）可操作的，（c）具有足够的上下文说明应用程序的哪些层出了问题。它没有爆发出不可读的、神秘的堆栈跟踪，而是提供了我们可以添加人类可读上下文的因素所导致的错误，并且应该通过上面所示的清晰错误链来处理。"}],["$","p",null,{"children":"此外，这种类型的错误链自然而然地作为标准 Go 程序结构的一部分出现，可能看起来像这样："}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"language-go code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 在 controllers/user.go 中"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":":="}]," db",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"CreateUser"}],["$","span",null,{"className":"token punctuation","children":"("}],"user",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"return"}]," fmt",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Errorf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"could not create user: %w\""}],["$","span",null,{"className":"token punctuation","children":","}]," err",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 在 database/user.go 中"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"func"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"db ",["$","span",null,{"className":"token operator","children":"*"}],"Database",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token function","children":"CreateUser"}],["$","span",null,{"className":"token punctuation","children":"("}],"user ",["$","span",null,{"className":"token operator","children":"*"}],"User",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token builtin","children":"error"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ok",["$","span",null,{"className":"token punctuation","children":","}]," err ",["$","span",null,{"className":"token operator","children":":="}]," db",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"DoesUserExist"}],["$","span",null,{"className":"token punctuation","children":"("}],"user",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token keyword","children":"return"}]," fmt",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Errorf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"could not check if user already exists in db: %w\""}],["$","span",null,{"className":"token punctuation","children":","}]," err",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token operator","children":"..."}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"func"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"db ",["$","span",null,{"className":"token operator","children":"*"}],"Database",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token function","children":"DoesUserExist"}],["$","span",null,{"className":"token punctuation","children":"("}],"user ",["$","span",null,{"className":"token operator","children":"*"}],"User",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token builtin","children":"error"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"if"}]," err ",["$","span",null,{"className":"token operator","children":":="}]," db",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Connected"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," err ",["$","span",null,{"className":"token operator","children":"!="}]," ",["$","span",null,{"className":"token boolean","children":"nil"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token keyword","children":"return"}]," fmt",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Errorf"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"could not establish db connection: %w\""}],["$","span",null,{"className":"token punctuation","children":","}]," err",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token operator","children":"..."}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"func"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"db ",["$","span",null,{"className":"token operator","children":"*"}],"Database",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token function","children":"Connected"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token builtin","children":"error"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"if"}]," ",["$","span",null,{"className":"token operator","children":"!"}],["$","span",null,{"className":"token function","children":"hasInternetConnection"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token keyword","children":"return"}]," errors",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"New"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"no internet connection\""}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token operator","children":"..."}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":["上面代码的美妙之处在于，每个错误都完全由其各自的函数命名空间限定，信息丰富，并且只负责它们所知道的内容。这种使用",["$","code",null,{"className":"custom-code","children":"fmt.Errorf(\"something went wrong: %w\", err)"}],"的错误链接方式使构建出色的错误消息变得简单，这些消息可以根据你的定义准确地告诉你出了什么问题。"]}],["$","p",null,{"children":["除此之外，如果你还想为函数附加堆栈跟踪，可以使用出色的",["$","code",null,{"className":"custom-code","children":"github.com/pkg/errors"}],"库，它提供了如下函数："]}],["$","$L12",null,{"className":"language-go","children":["$","code",null,{"className":"language-go code-highlight","children":["$","span",null,{"className":"code-line","children":["errors",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"Wrapf"}],["$","span",null,{"className":"token punctuation","children":"("}],"err",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token string","children":"\"could not save user with email %s\""}],["$","span",null,{"className":"token punctuation","children":","}]," email",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}]}]}],["$","p",null,{"children":"该函数会打印出堆栈跟踪以及你通过代码创建的人类可读的错误链。如果我可以总结一下关于编写符合 Go 习惯的错误处理的最重要建议："}],["$","ul",null,{"children":[["$","li",null,{"children":["$","strong",null,{"children":"当错误对开发人员有可操作性时添加堆栈跟踪"}]}],["$","li",null,{"children":["$","strong",null,{"children":"对返回的错误采取行动，不要只是将它们冒泡到 main 函数，记录它们，然后忘记它们"}]}],["$","li",null,{"children":["$","strong",null,{"children":"保持错误链明确无歧义"}]}]]}],["$","p",null,{"children":"当我编写 Go 代码时，错误处理是我从不担心的一件事，因为错误本身是我编写的每个函数的核心方面，让我能够完全控制如何安全、可读且负责任地处理它们。"}]]}]}],["$","div",null,{"className":"pb-6 pt-6 text-center text-gray-700 dark:text-gray-300","id":"comment","children":["$","$L13",null,{"slug":"go/why-go-error-handling-is-awesome"}]}],["$","footer",null,{"children":["$","div",null,{"className":"flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base","children":[["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/backend/kafka-basic","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Previous post: Kafka 基础知识","children":["← ","Kafka 基础知识"]}]}],["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/security/what-is-doh","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Next post: DNS over HTTPS (DoH) 简介","children":["DNS over HTTPS (DoH) 简介"," →"]}]}]]}]}]]}]]}]}]]}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"为什么 Go 语言的错误处理如此出色"}],["$","meta","3",{"name":"description","content":"Go 的 if err != nil 错误处理模式虽备受争议，却是其设计优势所在。通过将错误视为值，Go 迫使开发者显式处理错误情况，避免了隐藏的控制流，提供了清晰的错误传播链。这种方式虽看似繁琐，却让程序更可靠、透明、可预测，并赋予开发者对错误处理的完全控制权。"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://blog.mainjay.cloudns.ch/blog/go/why-go-error-handling-is-awesome"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mainjay.cloudns.ch/feed.xml"}],["$","meta","8",{"property":"og:title","content":"为什么 Go 语言的错误处理如此出色"}],["$","meta","9",{"property":"og:description","content":"Go 的 if err != nil 错误处理模式虽备受争议，却是其设计优势所在。通过将错误视为值，Go 迫使开发者显式处理错误情况，避免了隐藏的控制流，提供了清晰的错误传播链。这种方式虽看似繁琐，却让程序更可靠、透明、可预测，并赋予开发者对错误处理的完全控制权。"}],["$","meta","10",{"property":"og:url","content":"https://blog.mainjay.cloudns.ch/blog/go/why-go-error-handling-is-awesome"}],["$","meta","11",{"property":"og:site_name","content":"MainJayLai Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","14",{"property":"og:type","content":"article"}],["$","meta","15",{"property":"article:published_time","content":"2025-03-28T00:00:00.000Z"}],["$","meta","16",{"property":"article:modified_time","content":"2025-03-28T00:00:00.000Z"}],["$","meta","17",{"property":"article:author","content":"mainJayLai"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"为什么 Go 语言的错误处理如此出色"}],["$","meta","20",{"name":"twitter:description","content":"Go 的 if err != nil 错误处理模式虽备受争议，却是其设计优势所在。通过将错误视为值，Go 迫使开发者显式处理错误情况，避免了隐藏的控制流，提供了清晰的错误传播链。这种方式虽看似繁琐，却让程序更可靠、透明、可预测，并赋予开发者对错误处理的完全控制权。"}],["$","meta","21",{"name":"twitter:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
