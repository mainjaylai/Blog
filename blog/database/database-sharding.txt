3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"ThemeProviders"]
7:I[4080,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],""]
8:I[9032,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],""]
a:I[8173,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"Image"]
b:I[509,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarButton"]
c:I[1398,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
d:I[7606,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
e:I[7510,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
f:I[8976,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
4:["slug","database/database-sharding","c"]
0:["Ts-6BBsjdSlBnGT_Ikyc2",[[["",{"children":["blog",{"children":[["slug","database/database-sharding","c"],{"children":["__PAGE__?{\"slug\":[\"database\",\"database-sharding\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","database/database-sharding","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a9b9096fa657c0d0.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_dd5b2f scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"https://mainjaylai.github.io/favicon.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/manifest.json"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&display=swap","rel":"stylesheet"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=ZCOOL+KuaiLe&family=ZCOOL+QingKe+HuangYou&family=ZCOOL+XiaoWei&display=swap","rel":"stylesheet"}],["$","script",null,{"src":"https://us.umami.is/script.js","async":true}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","meta",null,{"name":"referrer","content":"no-referrer"}],["$","script",null,{"src":"https://cdn.jsdelivr.net/gh/ashishagarwal2023/freegptjs@1.0.2/src/freegpt.min.js"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","suppressHydrationWarning":true,"children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"bbe21cb3-3de3-4ba7-b6de-453053bc6ae8","src":"https://us.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"/search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-5","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"Blog","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","$La",null,{"src":"https://mainjaylai.github.io/favicon.png","width":44,"height":44,"alt":"logo"}]}],["$","div",null,{"className":"hidden h-[44px] text-center text-3xl font-semibold leading-10 sm:block","children":"Blog"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Blog"}],["$","$L9",null,{"href":"/tags","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Tags"}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://mainjaylai.github.io","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"About"}]],["$","$Lb",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lc",null,{}],["$","$Ld",null,{}],["$","$Le",null,{}],["$","$Lf",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:mainjaylai@outlook.com","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/mainjaylai","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitlab.com/JayMain","children":[["$","span",null,{"className":"sr-only","children":"gitlab"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M1022.08 579.712l-57.258667-176.426667-113.664-349.397333a19.413333 19.413333 0 0 0-36.992 0L700.501333 403.2H323.498667L209.877333 53.888C204.074667 35.84 178.56 35.84 172.8 53.76L59.136 403.157333 1.877333 579.712a39.424 39.424 0 0 0 14.122667 43.648L512 983.637333l496-360.234666a39.253333 39.253333 0 0 0 14.08-43.690667"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitee.com/lmj2001","children":[["$","span",null,{"className":"sr-only","children":"gitee"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M512 992C246.895625 992 32 777.104375 32 512S246.895625 32 512 32s480 214.895625 480 480-214.895625 480-480 480z m242.9521875-533.3278125h-272.56875a23.7121875 23.7121875 0 0 0-23.71125 23.7121875l-0.024375 59.255625c0 13.08 10.6078125 23.7121875 23.6878125 23.7121875h165.96c13.104375 0 23.7121875 10.6078125 23.7121875 23.6878125v11.855625a71.1121875 71.1121875 0 0 1-71.1121875 71.1121875h-225.215625a23.7121875 23.7121875 0 0 1-23.6878125-23.7121875V423.1278125a71.1121875 71.1121875 0 0 1 71.0878125-71.1121875h331.824375a23.7121875 23.7121875 0 0 0 23.6878125-23.71125l0.0721875-59.2565625a23.7121875 23.7121875 0 0 0-23.68875-23.7121875H423.08a177.76875 177.76875 0 0 0-177.76875 177.7921875V754.953125c0 13.1034375 10.60875 23.7121875 23.713125 23.7121875h349.63125a159.984375 159.984375 0 0 0 159.984375-159.984375V482.36a23.7121875 23.7121875 0 0 0-23.7121875-23.6878125z"}]}]]}]]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"MainJayLai"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"MainJayLai Blog"}]]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c890694439b2475b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/1ea5cf861ee12a80.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[4347,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
12:I[9629,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"数据库分片如何提升性能\",\"datePublished\":\"2024-08-14T00:00:00.000Z\",\"dateModified\":\"2024-08-14T00:00:00.000Z\",\"description\":\"分片是应对网络应用进化挑战的有效方法，但不应忽视其他解决方案如云数据库和新数据库架构。虽然技术趋势不断变化，判断一项技术应基于其实际性、效率和成本效益。保持对新趋势的开放态度，同时也应重视成熟技术的优势。\",\"image\":\"https://pngimg.com/uploads/github/github_PNG80.png\",\"url\":\"https://blog.mainjay.cloudns.ch/blog/database/database-sharding\",\"author\":[{\"@type\":\"Person\",\"name\":\"mainJayLai\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$L11",null,{}],["$","article",null,{"children":["$","div",null,{"children":[["$","header",null,{"children":["$","div",null,{"className":"space-y-1 border-b border-gray-200 pb-10 text-center dark:border-gray-700","children":[["$","div",null,{"className":"beautiful-chinese-title","children":["$","h1",null,{"className":"text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14","children":"数据库分片如何提升性能"}]}],["$","dl",null,{"children":["$","div",null,{"children":[["$","dt",null,{"className":"sr-only","children":"Published on"}],["$","dd",null,{"className":"text-base font-medium leading-6 text-gray-500 dark:text-gray-400","children":["$","time",null,{"dateTime":"2024-08-14T00:00:00.000Z","children":"August 14, 2024"}]}]]}]}]]}]}],["$","div",null,{"className":"grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:divide-y-0","children":[["$","div",null,{"className":"divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0","children":["$","div",null,{"className":"beautiful-chinese-content prose max-w-none pb-8 pt-10 dark:prose-invert","children":[["$","h2",null,{"className":"content-header","id":"目录","children":[["$","a",null,{"href":"#目录","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"目录"]}],["$","ul",null,{"className":"","children":[["$","li","0",{"className":"","children":[["$","a",null,{"href":"#引言-2","children":"引言"}],null]}],["$","li","1",{"className":"","children":[["$","a",null,{"href":"#数据库碎片化","children":"数据库碎片化"}],null]}],["$","li","2",{"className":"","children":[["$","a",null,{"href":"#为什么需要分片","children":"为什么需要分片"}],null]}],["$","li","3",{"className":"","children":[["$","a",null,{"href":"#如何对数据库进行分片","children":"如何对数据库进行分片"}],null]}],["$","li","4",{"className":"","children":[["$","a",null,{"href":"#什么是良好的分片","children":"什么是良好的分片"}],null]}],["$","li","5",{"className":"","children":[["$","a",null,{"href":"#分片和复制","children":"分片和复制"}],null]}],["$","li","6",{"className":"","children":[["$","a",null,{"href":"#如何隐藏应用程序的复杂性","children":"如何隐藏应用程序的复杂性"}],null]}],["$","li","7",{"className":"","children":[["$","a",null,{"href":"#结论与趋势","children":"结论与趋势"}],null]}]]}],["$","h2",null,{"className":"content-header","id":"引言","children":[["$","a",null,{"href":"#引言","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"引言"]}],["$","p",null,{"children":"分片（Sharding）是一种分布式数据库设计方法，旨在提升数据库性能和可扩展性。尽管分片的概念由来已久，但近期的技术创新使其成为解决大规模数据问题的有效方案之一。"}],["$","p",null,{"children":"数据库管理系统（DBMS）如今在企业中扮演着至关重要的角色，因为它们管理着公司最宝贵的资产——数据。30年前，数据通常存储在纸质文件、磁带或传统磁盘上。那时的数据生成和消费量相对较小，因此管理和访问数据并不困难。"}],["$","p",null,{"children":"然而，今天的情况截然不同。智能手机的普及以及各种应用程序的使用，使得我们生成和消费的数据量达到了前所未有的水平。这对数据库系统提出了巨大的挑战，尤其是那些需要处理数十亿次访问的顶级网站和服务。"}],["$","p",null,{"children":"面对如此庞大的流量，如何有效应对成为了一个关键问题。分片技术就是解决这一挑战的一种有效方法。尽管分片的概念可能听起来有些过时，但现代技术的进步（例如分布式SQL使得实现和管理分片变得容易）已经使得分片变得更加高效和易于管理。"}],["$","h2",null,{"className":"content-header","id":"数据库碎片化","children":[["$","a",null,{"href":"#数据库碎片化","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"数据库碎片化"]}],["$","p",null,{"children":"数据库技术已经存在超过50年，虽然时间久远，但数据库碎片化（Database Sharding）却仍然是技术行业发展最快的领域之一。随着数据基础设施的复杂性不断增加，碎片化技术也不断演进。"}],["$","p",null,{"children":"许多现代应用程序建立在多个数据库之上，包括关系型数据库（如PostgreSQL）、内存数据库（如Redis）、自定义数据库（如时间序列数据库）以及数据仓库。不同的应用程序、部门甚至供应商可能会使用不同的数据库系统，这使得数据管理变得更加复杂。"}],["$","p",null,{"children":"根据DB-Engines的统计，目前存在超过350种数据库管理系统，而根据卡内基梅隆大学的\"数据库之数据库\"（Database of Databases），有792种不同的数据库管理系统。这种多样性表明企业在选择数据库时的需求十分广泛。"}],["$","p",null,{"children":"例如，金融机构可能选择关系型数据库（如SQL Server或PostgreSQL）以保证事务的ACID属性；在线游戏或需要会话管理的Web应用通常选择NoSQL数据库（如Redis）；社交媒体分析公司则偏好图数据库，而物联网企业可能选择时间序列数据库以支持传感器数据。"}],["$","p",null,{"children":"在未来，数据库市场将变得更加碎片化，带来诸如供应商技术兼容性、遗留系统适配和更换成本等挑战。"}],["$","h2",null,{"className":"content-header","id":"为什么需要分片","children":[["$","a",null,{"href":"#为什么需要分片","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"为什么需要分片"]}],["$","p",null,{"children":"传统数据库可能难以应对越来越多的数据和查询流量。NoSQL和NewSQL概念如今非常流行,相应地,越来越多受这些理念启发的新数据库产品正在进入市场。但仅凭这些概念并不能解决日益增长的数据问题。"}],["$","p",null,{"children":"分片是一种将数据分割成单独的行和列，并存储在不同数据库服务器实例上的技术，目的是分散流量负载。每个小型表被称为一个分片。一些NoSQL产品如Apache HBase或MongoDB拥有分片功能，而分片架构则内置于NewSQL系统中。"}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture1.webp","alt":"Maple","width":"920","height":"371"}]}]}],["$","p",null,{"children":"让我们看看NewSQL架构的一个特定类型:与当今OLTP(在线事务处理)问题相关的分片。"}],["$","p",null,{"children":"尽管有许多解决方案可以最小化数据库负载,但分片具有以下优势:"}],["$","ul",null,{"children":[["$","li",null,{"children":"将数据存储分布在多台机器上"}],["$","li",null,{"children":"轻松平衡不同分片之间的流量负载"}],["$","li",null,{"children":"显著提高查询性能"}],["$","li",null,{"children":"无需额外工作即可扩展数据库"}],["$","li",null,{"children":"高效重用和升级传统DBMS"}],["$","li",null,{"children":"通过使用代理支持多租户,允许多个数据库在用户之间共享单个服务器或云计算资源"}]]}],["$","h2",null,{"className":"content-header","id":"如何对数据库进行分片","children":[["$","a",null,{"href":"#如何对数据库进行分片","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"如何对数据库进行分片"]}],["$","p",null,{"children":"以下是关于如何对数据库进行分片的基本工作流程。在讨论完设置和这项技术的基础思想之后，我们还将深入探讨一些重要的方面。"}],["$","p",null,{"children":["分片的最佳技术之一是将数据拆分为多个小表。这些小表也称为",["$","strong",null,{"children":"分区"}],"。原始表可以被分割为垂直分片或水平分片；也就是说，可以将一个或多个列存储在单独的表中（垂直分片），或者将一行或多行存储在单独的表中（水平分片）。这些表可以分别标记为“VS1”表示垂直分片和“HS1”表示水平分片。数字表示第一个表或第一个模式，然后是2、3，以此类推。当这些数据子集组合在一起时，就构成了表的原始模式。"]}],["$","p",null,{"children":"以下是分片的两个关键概念："}],["$","ul",null,{"children":[["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"分片键"}],"：一个特定的列值，指示该行存储在哪个分片中。"]}]}],["$","li",null,{"children":["$","p",null,{"children":[["$","strong",null,{"children":"分片算法"}],"：一种将数据分配到一个或多个分片中的算法。"]}]}]]}],["$","h3",null,{"className":"content-header","id":"步骤-1分析场景查询和数据分布以找到分片键和分片算法","children":[["$","a",null,{"href":"#步骤-1分析场景查询和数据分布以找到分片键和分片算法","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"步骤 1：分析场景查询和数据分布以找到分片键和分片算法"]}],["$","p",null,{"children":"要确定将某一行存储在哪个分片中，需要将分片算法应用于分片键。不同的分片策略适用于不同的场景。常见的策略包括："}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"MOD"}],"：MOD 是模运算的缩写，它将每第 n 行或列发送到特定的分片。例如，MOD 3 算法会将第一、第四、第七行发送到第一个分片，将第二、第五、第八行发送到第二个分片，将第三、第六、第九行发送到第三个分片，以此类推。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"HASH"}],"：哈希分片会均匀且随机地将数据分布到各个分片中。每行数据会根据计算的哈希值被放置在相应的分片中。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"RANGE"}],"：RANGE 会将特定范围的行或列发送到各自的分片中。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"TAG"}],"：TAG 会将所有匹配特定值的行或列发送到相应的分片中。"]}]]}],["$","p",null,{"children":"例如，如果分片键是 “ID”，分片算法是 “ID 模 2” （将奇数行和偶数行分开），行将按如下方式排序："}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture2.webp","alt":"Maple","width":"571","height":"421"}]}]}],["$","p",null,{"children":"因此，你需要设计一个适合的算法来使用分片键。分片策略将显著影响查询效率和未来的扩展性。不适当或糟糕的分片算法会在不同的分片间产生冗余数据，导致整体计算性能下降。"}],["$","p",null,{"children":"决定如何对数据库进行分片时，需要考虑的关键点是业务查询的特性和数据分布。每个数据库都会有独特的因素影响这个决策，但我们可以提供一些示例场景来说明一个好的分片算法如何高效地分配数据。"}],["$","h4",null,{"className":"content-header","id":"range","children":[["$","a",null,{"href":"#range","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"RANGE"]}],["$","p",null,{"children":"例如，在对包含时间戳日志详情的表进行分片时，建议使用创建日期作为分片键的 RANGE 分片算法。原因在于，通常人们倾向于仅在特定的时间范围内查询这些详细记录。"}],["$","p",null,{"children":"然而，使用日期时间作为分片键时，RANGE 算法可能会引发另一个问题：历史记录通常会较少更新，而最近的记录则频繁更新和查询。这样，大多数查询将集中在包含最新记录的分片上，导致这些查询相互竞争以获取更新数据的独占权。"}],["$","h4",null,{"className":"content-header","id":"mod","children":[["$","a",null,{"href":"#mod","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"MOD"]}],["$","p",null,{"children":"MOD 分片算法可以有效避免这种激烈的竞争。它通过“shardingKey MOD shards number”将行分片。最新的行会被分配到不同的分片中，从而避免了对最近记录的查询竞争。当分片键是字符串值（且可能涉及敏感信息披露）时，你可以使用 HASH 算法生成一个值，然后 MOD 算法可以使用这个值将数据分配到分片中。"}],["$","h4",null,{"className":"content-header","id":"tag","children":[["$","a",null,{"href":"#tag","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"TAG"]}],["$","p",null,{"children":["然而，有时你可能需要根据单元格的值来分片数据，在这种情况下，你可以使用 TAG 分片算法。假设为了遵守 GDPR 规定，你希望将所有欧盟的数据存储在欧盟境内的服务器上。那么，如何操作一个分片分布式数据库系统来回答这个问题呢？如果 DBA 使用 TAG 分片算法，那么带有特定国家数据的行可以被发送到位于特定国家的分片中。要找出有多少记录受影响，我们的分片数据库系统只需要从欧盟分片中返回 ",["$","code",null,{"className":"custom-code","children":"COUNT(*)"}],"，即可回答如下查询：",["$","code",null,{"className":"custom-code","children":"SELECT COUNT(*) FROM registrant_table WHERE region = \"EU\""}],"。一个需要从整个分布式系统计算最终结果的分布式查询，变成了从一个分片中进行的简单查询。"]}],["$","p",null,{"children":"没有一种方案适用于所有情况。为了实现最佳性能，花些时间深入分析你的具体业务场景。如果你希望快速入门，分布式分片数据库系统通常会选择一个适用于大多数用例的常见策略。"}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture3.webp","alt":"Maple","width":"951","height":"498"}]}]}],["$","h3",null,{"className":"content-header","id":"步骤-2迁移现有数据","children":[["$","a",null,{"href":"#步骤-2迁移现有数据","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"步骤 2：迁移现有数据"]}],["$","p",null,{"children":"如果你决定实施分片，不需要将所有原始数据迁移到分片集群中。这样做会面临以下挑战："}],["$","ul",null,{"children":[["$","li",null,{"children":"如何在业务全天候运行的情况下对数据进行分片"}],["$","li",null,{"children":"如何在新的分片集群中重放增量数据"}],["$","li",null,{"children":"如何比较原始数据库与新分片集群之间的数据"}],["$","li",null,{"children":"如何找到将流量切换到新分片集群的最佳时机"}]]}],["$","p",null,{"children":"然而，如果你决定将历史数据迁移到分片中，传统的方法如下："}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"首先"}],"，通过分片算法将历史数据分区到新的数据库分片集群中。建议使用一个程序自动移动数据，该程序将运行所有需要的 SQL 查询。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"其次"}],"，运行一个平台或程序以提取和解析数据库日志，了解在分区过程中发生了哪些变化，并将这些变化应用到新的分片集群中（即增量数据分片）。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"第三"}],"，选择一个数据检查策略来比较原始数据库和新分片集群之间的数据。这些数据检查策略可以在高精度和短时间内灵活选择，或者在两者之间取得平衡。你可以选择逐行比较或仅检查总量以确定检查的精度。如果你想实现最高的精度，逐行比较将需要最多的努力，而仅比较原始集群和新集群的行数则速度最快，但以牺牲准确性为代价。其他策略，如 ",["$","strong",null,{"children":"CRC32"}],"，可以在精度和速度之间取得平衡。"]}]]}],["$","h3",null,{"className":"content-header","id":"步骤-3将流量切换到新集群","children":[["$","a",null,{"href":"#步骤-3将流量切换到新集群","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"步骤 3：将流量切换到新集群"]}],["$","p",null,{"children":"假设前面的步骤都顺利完成，接下来的步骤是将在线流量切换到你的新分片集群。这应该在数据库集群不可写入的时间段内进行，以确保两个数据集保持一致并维持可选的查询功能——因此，非高峰时段通常是执行此步骤的最佳时间。"}],["$","p",null,{"children":"为了确保分布式数据的一致性，所有更新请求都应该被禁止，但查询是允许的，因为它们不会引起分布式系统中的任何变化。这个过程看起来足够简单，但处理每个部分可能会充满挑战。自动执行迁移可以将停机时间降到最低，但由于你将处理宝贵的数据，必须谨慎行事。"}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture4.webp","alt":"Maple","width":"831","height":"150"}]}]}],["$","p",null,{"children":"Apache ShardingSphere 就是将整个分片过程作为其主要功能之一。它提供不同的分片策略、数据迁移、重新分片，并管理现有的分片。"}],["$","p",null,{"children":"它还提供更高级的功能，以帮助解决接下来部分提到的问题。此外，Apache ShardingSphere 拥有一个活跃的社区，这意味着你的大多数问题都已被解决。"}],["$","h2",null,{"className":"content-header","id":"什么是良好的分片","children":[["$","a",null,{"href":"#什么是良好的分片","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"什么是良好的分片"]}],["$","p",null,{"children":"现在你已经了解了分片的工作流程以及在数据库上执行分片的必要步骤，但什么才是良好的分片呢？"}],["$","p",null,{"children":"不需要过多扩展边缘理论或特定场景的需求，良好的分片通常具有以下六个特性："}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"易于设置和理解"}],"：即使 DBA（数据库管理员）发生变更，也能轻松理解和操作。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"高可用性"}],"：系统能够在出现故障时继续正常运行。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"弹性扩展能力"}],"：系统能够根据需求灵活扩展。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"高分布式系统性能"}],"：系统在分布式环境下表现出色。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"可观测性"}],"：系统能够提供足够的信息以便监控和调试。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"低迁移开销"}],"：数据迁移的成本和复杂性较低。"]}]]}],["$","p",null,{"children":"这六个因素的存在代表了理想的分片状态，但这也取决于你选择的分片客户端。"}],["$","h2",null,{"className":"content-header","id":"分片和复制","children":[["$","a",null,{"href":"#分片和复制","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"分片和复制"]}],["$","p",null,{"children":["除了上文提到的核心流程外，还需要了解以下内容，因为数据库场景多种多样，随着应用程序的扩展，你的需求也会随之改变。提高数据库性能和可扩展性的另一种方法是使用",["$","strong",null,{"children":"复制"}],"。复制会创建独立运行的数据库节点副本。写入一个节点的数据将被复制到其他副本节点上。"]}],["$","p",null,{"children":"通常，专业人士和开发者都希望最大限度地利用数据库以获得高可用性和性能——然而，分片和复制的架构可能会导致复杂的数据库管理和路由策略。想象一下，每个分片都有副本节点。结果可能会像下图一样。如果一个主节点有多个副本，应用程序访问时的复杂性将加剧。"}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture5.webp","alt":"Maple","width":"620","height":"494"}]}]}],["$","p",null,{"children":"那么，分片和复制有什么区别呢？如上所述，分片是将一个大表拆分为几个小表来创建多个分片；而复制则是创建原始表的多个副本。每个副本都包含原始表的完整数据（即主节点的数据）。"}],["$","p",null,{"children":"分片可以帮助用户在多个服务器上均衡数据的存储，以实现可扩展性，而复制则会创建主数据库的备份以提高系统的可用性。这两种不同的架构为分布式系统带来了不同的优势。基于此，有些用户希望同时拥有这两种能力，因此在实际中，经常会看到分片和复制混合使用的架构。"}],["$","div",null,{"className":"flex flex-col items-center justify-center text-center","children":["$","div",null,{"children":["$","$La",null,{"src":"/static/images/database/database-sharding/picture6.webp","alt":"Maple","width":"746","height":"538"}]}]}],["$","p",null,{"children":"如以上图所示，用户可能希望将一个包含海量数据的数据库分片到不同的服务器上，例如 P1、P2、P3。每个查询也将被分片到不同的分片上，以提高这个分布式数据库系统的 TPS 或 QPS。然而，如果其中一个分片崩溃，可用性将降至 2/3。而且，拉起另一个离线版本的副本非常耗时，可能导致严重的损失。为了提高这个分片系统的可用性，一个有效的方法是为每个分片拉起一个副本，即前面提到的主节点 P1、P2、P3。"}],["$","p",null,{"children":"R1、R2、R3 的存在说明了我上面解释的解决方案。当 P1 不可用时，它的副本 R1 将被提升为主节点，以继续为业务服务。这是一种安全的选择，基于的理念是停机越小，损失就越小。"}],["$","p",null,{"children":"这个想法听起来很不错，但这个分布式分片数据库系统的拓扑结构让应用程序的访问变得复杂。假设每个主节点拥有两个副本，那么由 P1、P2、P3 及其六个副本组成的网络将使开发者感到困惑和负担增加，产生以下问题：哪个主节点适合这个查询？如何访问它们的副本之一？如何在不同副本之间进行负载均衡？一旦主节点无法工作，谁将帮助我重新路由这个查询？"}],["$","p",null,{"children":"在我们的假设场景中，开发者的职责是为业务效率编写代码。这个出色的架构确实有其优点，但太复杂，难以利用和维护。"}],["$","h2",null,{"className":"content-header","id":"如何隐藏应用程序的复杂性","children":[["$","a",null,{"href":"#如何隐藏应用程序的复杂性","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"如何隐藏应用程序的复杂性"]}],["$","p",null,{"children":"通常，用户可以选择两种类型的客户端或访问模式，外加一种新的“额外”类型的客户端。分片可以通过一个专用的数据库连接驱动程序启动，也可以通过将应用程序连接到一个代理应用程序来路由数据。"}],["$","p",null,{"children":[["$","strong",null,{"children":"Sidecar"}]," 是现有分片模式中的新概念，源自服务网格。简单来说，它是一个与服务一起部署的代理实例，用于处理不同服务之间的通信、监控等。这个模式的操作类似于附在摩托车上的边车。这意味着 Sidecar 附在一个主应用程序上，同时为该应用程序提供支持功能。"]}],["$","p",null,{"children":"如果我们使用专用驱动程序或代理而不是 Sidecar，它将表现为单个数据库服务器，帮助用户管理其数据库集群。通过这种方式，应用程序不会受到这些复杂访问拓扑结构的影响，也不需要重新架构自己以适应新的框架。"}],["$","h2",null,{"className":"content-header","id":"结论与趋势","children":[["$","a",null,{"href":"#结论与趋势","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"结论与趋势"]}],["$","p",null,{"children":"分片是解决网络应用进化带来的新挑战的一种方法。其他解决方案包括 DBaaS（或云数据库）、新数据库架构，或者干脆采用传统的增加存储数据库数量的方法。分片是一种解决大规模数据问题的有效方法，但它并不是唯一的解决方案。随着技术的发展，新的数据库架构和服务也不断出现。保持对新趋势的开放态度，同时理解现有技术的优势，将有助于做出最佳的技术选择。"}],["$","p",null,{"children":"总之，分片和复制的组合可以显著提升数据库的性能和可用性，但也需要仔细规划和管理。通过合理选择和实施分片策略，可以有效应对不断增长的数据需求，确保系统的稳定性和可扩展性。"}]]}]}],["$","div",null,{"className":"pb-6 pt-6 text-center text-gray-700 dark:text-gray-300","id":"comment","children":["$","$L12",null,{"slug":"database/database-sharding"}]}],["$","footer",null,{"children":["$","div",null,{"className":"flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base","children":[["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/tools/cicflowmeter","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Previous post: CICFlowMeter：强大的网络流量分析工具","children":["← ","CICFlowMeter：强大的网络流量分析工具"]}]}],["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/backend/authentication","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Next post: 深入了解六种身份验证方法","children":["深入了解六种身份验证方法"," →"]}]}]]}]}]]}]]}]}]]}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"数据库分片如何提升性能"}],["$","meta","3",{"name":"description","content":"分片是应对网络应用进化挑战的有效方法，但不应忽视其他解决方案如云数据库和新数据库架构。虽然技术趋势不断变化，判断一项技术应基于其实际性、效率和成本效益。保持对新趋势的开放态度，同时也应重视成熟技术的优势。"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://blog.mainjay.cloudns.ch/blog/database/database-sharding"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mainjay.cloudns.ch/feed.xml"}],["$","meta","8",{"property":"og:title","content":"数据库分片如何提升性能"}],["$","meta","9",{"property":"og:description","content":"分片是应对网络应用进化挑战的有效方法，但不应忽视其他解决方案如云数据库和新数据库架构。虽然技术趋势不断变化，判断一项技术应基于其实际性、效率和成本效益。保持对新趋势的开放态度，同时也应重视成熟技术的优势。"}],["$","meta","10",{"property":"og:url","content":"https://blog.mainjay.cloudns.ch/blog/database/database-sharding"}],["$","meta","11",{"property":"og:site_name","content":"MainJayLai Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","14",{"property":"og:type","content":"article"}],["$","meta","15",{"property":"article:published_time","content":"2024-08-14T00:00:00.000Z"}],["$","meta","16",{"property":"article:modified_time","content":"2024-08-14T00:00:00.000Z"}],["$","meta","17",{"property":"article:author","content":"mainJayLai"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"数据库分片如何提升性能"}],["$","meta","20",{"name":"twitter:description","content":"分片是应对网络应用进化挑战的有效方法，但不应忽视其他解决方案如云数据库和新数据库架构。虽然技术趋势不断变化，判断一项技术应基于其实际性、效率和成本效益。保持对新趋势的开放态度，同时也应重视成熟技术的优势。"}],["$","meta","21",{"name":"twitter:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
