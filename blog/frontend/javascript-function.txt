3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"ThemeProviders"]
7:I[4080,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],""]
8:I[9032,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],""]
a:I[8173,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"Image"]
b:I[509,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"KBarButton"]
c:I[1398,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
d:I[7606,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
e:I[7510,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
f:I[8976,["599","static/chunks/ebde5ed1-51545511fe0d5050.js","231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","850","static/chunks/850-ecf153581cc02044.js","185","static/chunks/app/layout-54bebb918ae7f176.js"],"default"]
4:["slug","frontend/javascript-function","c"]
0:["Ts-6BBsjdSlBnGT_Ikyc2",[[["",{"children":["blog",{"children":[["slug","frontend/javascript-function","c"],{"children":["__PAGE__?{\"slug\":[\"frontend\",\"javascript-function\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","frontend/javascript-function","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a9b9096fa657c0d0.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_dd5b2f scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"https://mainjaylai.github.io/favicon.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/manifest.json"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200..900&display=swap","rel":"stylesheet"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=ZCOOL+KuaiLe&family=ZCOOL+QingKe+HuangYou&family=ZCOOL+XiaoWei&display=swap","rel":"stylesheet"}],["$","script",null,{"src":"https://us.umami.is/script.js","async":true}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","meta",null,{"name":"referrer","content":"no-referrer"}],["$","script",null,{"src":"https://cdn.jsdelivr.net/gh/ashishagarwal2023/freegptjs@1.0.2/src/freegpt.min.js"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","suppressHydrationWarning":true,"children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"bbe21cb3-3de3-4ba7-b6de-453053bc6ae8","src":"https://us.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"/search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-5","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"Blog","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","$La",null,{"src":"https://mainjaylai.github.io/favicon.png","width":44,"height":44,"alt":"logo"}]}],["$","div",null,{"className":"hidden h-[44px] text-center text-3xl font-semibold leading-10 sm:block","children":"Blog"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Blog"}],["$","$L9",null,{"href":"/tags","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"Tags"}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://mainjaylai.github.io","className":"navbar-item hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"About"}]],["$","$Lb",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lc",null,{}],["$","$Ld",null,{}],["$","$Le",null,{}],["$","$Lf",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:mainjaylai@outlook.com","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/mainjaylai","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitlab.com/JayMain","children":[["$","span",null,{"className":"sr-only","children":"gitlab"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M1022.08 579.712l-57.258667-176.426667-113.664-349.397333a19.413333 19.413333 0 0 0-36.992 0L700.501333 403.2H323.498667L209.877333 53.888C204.074667 35.84 178.56 35.84 172.8 53.76L59.136 403.157333 1.877333 579.712a39.424 39.424 0 0 0 14.122667 43.648L512 983.637333l496-360.234666a39.253333 39.253333 0 0 0 14.08-43.690667"}]}]]}],["$","a",null,{"className":"text-sm !text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://gitee.com/lmj2001","children":[["$","span",null,{"className":"sr-only","children":"gitee"}],["$","svg",null,{"viewBox":"0 0 1024 1024","xmlns":"http://www.w3.org/2000/svg","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","width":"200","height":"200","children":["$","path",null,{"d":"M512 992C246.895625 992 32 777.104375 32 512S246.895625 32 512 32s480 214.895625 480 480-214.895625 480-480 480z m242.9521875-533.3278125h-272.56875a23.7121875 23.7121875 0 0 0-23.71125 23.7121875l-0.024375 59.255625c0 13.08 10.6078125 23.7121875 23.6878125 23.7121875h165.96c13.104375 0 23.7121875 10.6078125 23.7121875 23.6878125v11.855625a71.1121875 71.1121875 0 0 1-71.1121875 71.1121875h-225.215625a23.7121875 23.7121875 0 0 1-23.6878125-23.7121875V423.1278125a71.1121875 71.1121875 0 0 1 71.0878125-71.1121875h331.824375a23.7121875 23.7121875 0 0 0 23.6878125-23.71125l0.0721875-59.2565625a23.7121875 23.7121875 0 0 0-23.68875-23.7121875H423.08a177.76875 177.76875 0 0 0-177.76875 177.7921875V754.953125c0 13.1034375 10.60875 23.7121875 23.713125 23.7121875h349.63125a159.984375 159.984375 0 0 0 159.984375-159.984375V482.36a23.7121875 23.7121875 0 0 0-23.7121875-23.6878125z"}]}]]}]]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"MainJayLai"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"MainJayLai Blog"}]]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c890694439b2475b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/1ea5cf861ee12a80.css","precedence":"next","crossOrigin":"$undefined"}]],"$L10"]]]]
11:I[4347,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
12:I[408,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
13:I[9629,["231","static/chunks/231-34a6a67d2da26855.js","827","static/chunks/827-69594f61c16b8a9c.js","797","static/chunks/app/blog/%5B...slug%5D/page-bd056182432da53b.js"],"default"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"深入探讨 JavaScript 中的函数式编程\",\"datePublished\":\"2024-11-14T00:00:00.000Z\",\"dateModified\":\"2024-11-14T00:00:00.000Z\",\"description\":\"本文深入探讨了 JavaScript 中的函数式编程，重点介绍了纯函数、不变性、柯里化、记忆化和单子等概念。通过这些技术，开发者可以编写更加可预测、可维护和高效的代码。文章展示了如何通过这些概念协同工作，提升代码的可靠性、复用性和性能，是理解和应用函数式编程的重要指南。\",\"image\":\"https://pngimg.com/uploads/github/github_PNG80.png\",\"url\":\"https://blog.mainjay.cloudns.ch/blog/frontend/javascript-function\",\"author\":[{\"@type\":\"Person\",\"name\":\"mainJayLai\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$L11",null,{}],["$","article",null,{"children":["$","div",null,{"children":[["$","header",null,{"children":["$","div",null,{"className":"space-y-1 border-b border-gray-200 pb-10 text-center dark:border-gray-700","children":[["$","div",null,{"className":"beautiful-chinese-title","children":["$","h1",null,{"className":"text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-5xl md:leading-14","children":"深入探讨 JavaScript 中的函数式编程"}]}],["$","dl",null,{"children":["$","div",null,{"children":[["$","dt",null,{"className":"sr-only","children":"Published on"}],["$","dd",null,{"className":"text-base font-medium leading-6 text-gray-500 dark:text-gray-400","children":["$","time",null,{"dateTime":"2024-11-14T00:00:00.000Z","children":"November 14, 2024"}]}]]}]}]]}]}],["$","div",null,{"className":"grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 dark:divide-gray-700 xl:divide-y-0","children":[["$","div",null,{"className":"divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0","children":["$","div",null,{"className":"beautiful-chinese-content prose max-w-none pb-8 pt-10 dark:prose-invert","children":[["$","p",null,{"children":"函数式编程（FP）在软件开发中越来越受到关注，JavaScript 开发者也日益采用这一范式来更加高效地解决问题并减少 Bug。函数式编程的核心强调使用纯函数、不变性以及诸如柯里化、记忆化和单子（monad）等高级技术，以创造更简洁、更可预测的代码。"}],["$","p",null,{"children":"在这篇博客中，我们将深入探讨这些概念，了解它们的工作原理以及它们为何在 JavaScript 开发中如此重要。我们将讨论纯函数及其副作用-free 的特性、不变性对于保持状态可预测性的重要性、柯里化增强函数复用性和组合性、记忆化优化性能以及单子在函数式风格中处理副作用的方式。"}],["$","p",null,{"children":"无论你是函数式编程的新手，还是希望加深对其在 JavaScript 中应用理解的开发者，这篇文章都将为你提供一个坚实的基础以及将这些原则集成到你编码实践中的实际例子。让我们一起揭开这些概念的面纱，看看它们如何改变你编写 JavaScript 代码的方式。"}],["$","h2",null,{"className":"content-header","id":"1-纯函数","children":[["$","a",null,{"href":"#1-纯函数","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"1. 纯函数"]}],["$","p",null,{"children":"纯函数是指给定相同的输入时，总是返回相同的输出，并且不会引起任何可观察的副作用。这个概念在函数式编程中至关重要，因为它使开发者能够编写更可预测且更易测试的代码。"}],["$","p",null,{"children":["$","strong",null,{"children":"在 JavaScript 中使用纯函数的好处："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"可预测性"}],"：由于纯函数不依赖于外部的状态或修改外部的变量，它们更容易理解和调试。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"可复用性"}],"：纯函数可以在应用程序的不同部分重复使用，而不必担心外部上下文。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"可测试性"}],"：没有隐藏的状态或副作用，纯函数的测试非常简单；只需要考虑输入和输出。"]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"JavaScript 中的纯函数示例："}]}],["$","p",null,{"children":"考虑一个简单的计算矩形面积的函数："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token function","children":"rectangleArea"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":["length",["$","span",null,{"className":"token punctuation","children":","}]," width"]}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," length ",["$","span",null,{"className":"token operator","children":"*"}]," width\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],["$","p",null,{"children":"这个函数是纯函数，因为它总是返回相同的结果，并且它不会修改任何外部的状态或产生副作用。"}],["$","p",null,{"children":["$","strong",null,{"children":"常见陷阱及如何避免："}]}],["$","p",null,{"children":"尽管纯函数提供了许多好处，但开发者可能会遇到将其集成到需要与数据库、外部服务或全局状态交互的应用程序中的挑战。以下是一些保持纯度的建议："}],["$","ul",null,{"children":[["$","li",null,{"children":"避免副作用：不要在函数内部修改任何外部的变量或对象。"}],["$","li",null,{"children":"局部处理状态：如果函数需要访问应用程序状态，考虑将状态作为参数传递，并返回一个新的状态，而不是修改原始状态。"}]]}],["$","p",null,{"children":"通过理解和实现纯函数，开发者可以迈出重要的一步，充分利用 JavaScript 中函数式编程的力量。"}],["$","h2",null,{"className":"content-header","id":"2-不变性","children":[["$","a",null,{"href":"#2-不变性","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"2. 不变性"]}],["$","p",null,{"children":"不变性指的是创建的数据在创建后不能被改变。你不应该修改现有的对象，而是创建一个新的对象并应用所需的更改。这是函数式编程的基石，因为它有助于防止副作用并保持数据在整个应用生命周期中的一致性。"}],["$","p",null,{"children":["$","strong",null,{"children":"JavaScript 如何处理不变性："}]}],["$","p",null,{"children":"JavaScript 中的对象和数组默认是可变的，这意味着在需要时必须采取措施来强制执行不变性。然而，有几种技术和工具可以帮助实现这一点："}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"使用 const"}],"：虽然 ",["$","code",null,{"className":"custom-code","children":"const"}]," 不会使变量本身不可变，但它可以防止变量标识符被重新赋值，这是一种迈向不变性的措施。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"Object.freeze()"}],"：此方法可以使对象变为不可变，防止添加新属性或修改现有属性。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"扩展语法（Spread Syntax）"}],"：使用扩展语法可以创建新的数组或对象，并将现有数组或对象中的元素或属性包含进来，而不修改原始对象。"]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"确保数据不变性的技术："}]}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"写时复制（Copy on Write）"}],"：总是创建一个新对象或数组，而不是修改现有的。例如："]}]}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," original ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token literal-property property","children":"a"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"1"}],["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token literal-property property","children":"b"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"2"}]," ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," modified ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token operator spread","children":"..."}],"original",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token literal-property property","children":"b"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"3"}]," ",["$","span",null,{"className":"token punctuation","children":"}"}]," ",["$","span",null,{"className":"token comment","children":"// 'original' 不会被改变"}],"\n"]}]]}]}],["$","ul",null,{"children":["$","li",null,{"children":[["$","strong",null,{"children":"使用库"}],"：像 Immutable.js 这样的库提供了持久化的不变数据结构，能够简化不变性的实现。"]}]}],["$","p",null,{"children":["$","strong",null,{"children":"有助于实现不变性的库："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"Immutable.js"}],"：提供一系列本身不可变的数据结构。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"immer"}],"：通过使用临时草稿状态并应用更改来生成新的不可变状态，使得处理不可变状态变得更加方便。"]}]]}],["$","p",null,{"children":"通过将不变性集成到 JavaScript 项目中，开发者可以增强数据一致性，提升应用性能（减少了防御性拷贝的需要），并提高代码的可预测性。这与函数式编程的原则完美契合，从而使软件更加简洁、健壮。"}],["$","h2",null,{"className":"content-header","id":"3-柯里化","children":[["$","a",null,{"href":"#3-柯里化","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"3. 柯里化"]}],["$","p",null,{"children":"柯里化是一种变革性的技术，将一个接受多个参数的函数转换为一系列每次接受一个参数的函数。这种方法不仅使函数更加模块化，还增强了代码的复用性和组合性。"}],["$","p",null,{"children":["$","strong",null,{"children":"柯里化在 JavaScript 中的实际应用："}]}],["$","p",null,{"children":"柯里化可以创建更具定制化和可重用的高阶函数，非常适合以下场景："}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"事件处理"}],"：创建部分应用的函数，以便为特定事件定制，但复用公共处理逻辑。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"API 调用"}],"：设置带有预定义参数的函数（如 API 密钥或用户 ID），可重复在不同的调用中使用。"]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"通过柯里化实现的逐步示例："}]}],["$","p",null,{"children":"考虑一个简单的函数来加两个数："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token function","children":"add"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":["a",["$","span",null,{"className":"token punctuation","children":","}]," b"]}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," a ",["$","span",null,{"className":"token operator","children":"+"}]," b\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 柯里化版本的加法函数"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token function","children":"curriedAdd"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"a"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," ",["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"b"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," a ",["$","span",null,{"className":"token operator","children":"+"}]," b\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," addFive ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"curriedAdd"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token number","children":"5"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"addFive"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token number","children":"3"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token comment","children":"// 输出: 8"}],"\n"]}]]}]}],["$","p",null,{"children":"这个例子展示了如何通过柯里化将一个简单的加法函数转变为更具通用性和可复用性的函数。"}],["$","p",null,{"children":["$","strong",null,{"children":"柯里化与部分应用："}]}],["$","p",null,{"children":"虽然柯里化和部分应用都涉及将函数拆解成更简单、更具体的函数，但它们并不相同："}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"柯里化"}],"：将一个接受多个参数的函数转换为一系列嵌套的函数，每个函数仅接受一个参数。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"部分应用"}],"：通过预填充部分参数来创建一个新的函数，使其只需要较少的参数。"]}]]}],["$","p",null,{"children":"这两种技术在函数式编程中都很有价值，可以简化复杂的函数签名并提高代码模块化。"}],["$","p",null,{"children":"通过利用柯里化，开发者可以增强函数的复用性和组合性，从而使 JavaScript 项目中的代码更加清晰和可维护。"}],["$","h2",null,{"className":"content-header","id":"4-记忆化","children":[["$","a",null,{"href":"#4-记忆化","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"4. 记忆化"]}],["$","p",null,{"children":[["$","strong",null,{"children":"记忆化"}],"是一种优化技术，用于通过存储耗时的函数调用结果并在相同输入再次发生时返回缓存的结果，从而加速计算机程序的运行。这在 JavaScript 中尤其适用于优化涉及繁重计算任务的应用程序性能。"]}],["$","p",null,{"children":["$","strong",null,{"children":"记忆化在 JavaScript 中的重要性："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"效率"}],"：减少了对重复函数调用的计算。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"性能"}],"：通过缓存耗时的操作结果，提高应用程序的响应速度。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"可扩展性"}],"：通过减少计算开销，帮助管理更大的数据集或更复杂的算法。"]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"实现记忆化：常见方法与示例："}]}],["$","p",null,{"children":"以下是一个基本的记忆化函数示例："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token function","children":"memoize"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"fn"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword","children":"const"}]," cache ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," ",["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":[["$","span",null,{"className":"token operator spread","children":"..."}],"args"]}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"const"}]," key ",["$","span",null,{"className":"token operator","children":"="}]," args",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"toString"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword control-flow","children":"if"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token operator","children":"!"}],"cache",["$","span",null,{"className":"token punctuation","children":"["}],"key",["$","span",null,{"className":"token punctuation","children":"]"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["      cache",["$","span",null,{"className":"token punctuation","children":"["}],"key",["$","span",null,{"className":"token punctuation","children":"]"}]," ",["$","span",null,{"className":"token operator","children":"="}]," fn",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"apply"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":","}]," args",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," cache",["$","span",null,{"className":"token punctuation","children":"["}],"key",["$","span",null,{"className":"token punctuation","children":"]"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," factorial ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"memoize"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"x"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"if"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"x ",["$","span",null,{"className":"token operator","children":"==="}]," ",["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," ",["$","span",null,{"className":"token number","children":"1"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"}"}]," ",["$","span",null,{"className":"token keyword control-flow","children":"else"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," x ",["$","span",null,{"className":"token operator","children":"*"}]," ",["$","span",null,{"className":"token function","children":"factorial"}],["$","span",null,{"className":"token punctuation","children":"("}],"x ",["$","span",null,{"className":"token operator","children":"-"}]," ",["$","span",null,{"className":"token number","children":"1"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"factorial"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token number","children":"5"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token comment","children":"// 计算并缓存结果"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"factorial"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token number","children":"5"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token comment","children":"// 返回缓存的结果"}],"\n"]}]]}]}],["$","p",null,{"children":"此示例演示了如何通过记忆化缓存阶乘计算结果，从而显著减少对重复计算的需求。"}],["$","p",null,{"children":["$","strong",null,{"children":"记忆化的好处与潜在弊端："}]}],["$","p",null,{"children":["$","strong",null,{"children":"好处："}]}],["$","ul",null,{"children":[["$","li",null,{"children":"显著减少重复操作的处理时间。"}],["$","li",null,{"children":"通过避免冗余计算提高应用程序的效率。"}],["$","li",null,{"children":"易于使用高阶函数实现。"}]]}],["$","p",null,{"children":["$","strong",null,{"children":"弊端："}]}],["$","ul",null,{"children":[["$","li",null,{"children":"由于缓存，内存使用量增加。"}],["$","li",null,{"children":"不适合具有非确定性输出或副作用的函数。"}]]}],["$","p",null,{"children":"通过理解和实现记忆化，开发者可以优化 JavaScript 应用程序的性能，使其更快、更高效。然而，必须考虑额外的内存开销，并确保只有在有明确性能获益时才使用记忆化。"}],["$","h2",null,{"className":"content-header","id":"5-单子","children":[["$","a",null,{"href":"#5-单子","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"5. 单子"]}],["$","p",null,{"children":"单子是一种抽象数据类型，用于在函数式编程中以受控方式处理副作用，同时保持纯函数的原则。它们将行为和逻辑封装在灵活、可链式的结构中，允许在保持函数纯洁性的同时进行顺序操作。"}],["$","p",null,{"children":["$","strong",null,{"children":"单子介绍及其在函数式编程中的意义："}]}],["$","p",null,{"children":"单子为处理副作用（如 I/O、状态、异常等）提供了一个框架，帮助保持函数纯洁性和组合性。在 JavaScript 中，Promise 就是一个熟悉的单子结构，能够以干净且高效的方式管理异步操作。"}],["$","p",null,{"children":["$","strong",null,{"children":"JavaScript 中单子的示例："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"Promises"}],"：处理异步操作，封装待定操作、成功值或错误，允许方法链（如 ",["$","code",null,{"className":"custom-code","children":".then()"}]," 和 ",["$","code",null,{"className":"custom-code","children":".catch()"}],"）："]}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"new"}]," ",["$","span",null,{"className":"token class-name","children":"Promise"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":["resolve",["$","span",null,{"className":"token punctuation","children":","}]," reject"]}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token function","children":"setTimeout"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token function","children":"resolve"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"'数据已获取'"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token number","children":"1000"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"then"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"data"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],"data",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token keyword control-flow","children":"catch"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"error"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"error"}],["$","span",null,{"className":"token punctuation","children":"("}],"error",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}]]}]}]]}],["$","li",null,{"children":[["$","p",null,{"children":[["$","strong",null,{"children":"Maybe Monad"}],"：通过封装可能存在或不存在的值来帮助处理 ",["$","code",null,{"className":"custom-code","children":"null"}]," 或 ",["$","code",null,{"className":"custom-code","children":"undefined"}]," 错误："]}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token function","children":["$","span",null,{"className":"token maybe-class-name","children":"Maybe"}]}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"value"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"value"}]," ",["$","span",null,{"className":"token operator","children":"="}]," value\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name","children":"Maybe"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"prototype"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method function-variable method-variable","children":"bind"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"transform"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," ",["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"value"}]," ",["$","span",null,{"className":"token operator","children":"=="}]," ",["$","span",null,{"className":"token keyword nil null","children":"null"}]," ",["$","span",null,{"className":"token operator","children":"?"}]," ",["$","span",null,{"className":"token keyword","children":"this"}]," ",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token keyword","children":"new"}]," ",["$","span",null,{"className":"token class-name","children":"Maybe"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"transform"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"value"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name","children":"Maybe"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"prototype"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method function-variable method-variable","children":"toString"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token keyword","children":"function"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword control-flow","children":"return"}]," ",["$","span",null,{"className":"token template-string","children":[["$","span",null,{"className":"token string template-punctuation","children":"`"}],["$","span",null,{"className":"token string","children":"Maybe("}],["$","span",null,{"className":"token interpolation","children":[["$","span",null,{"className":"token punctuation interpolation-punctuation","children":"$${"}],["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token property-access","children":"value"}],["$","span",null,{"className":"token punctuation interpolation-punctuation","children":"}"}]]}],["$","span",null,{"className":"token string","children":")"}],["$","span",null,{"className":"token string template-punctuation","children":"`"}]]}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," result ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token keyword","children":"new"}]," ",["$","span",null,{"className":"token class-name","children":"Maybe"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"'Hello, world!'"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"bind"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"value"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," value",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"toUpperCase"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],"result",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"toString"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token comment","children":"// 输出: Maybe(HELLO, WORLD!)"}],"\n"]}]]}]}]]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"单子的法律和结构："}]}],["$","p",null,{"children":["单子必须遵循三个核心法律——",["$","strong",null,{"children":"身份律"}],"、",["$","strong",null,{"children":"结合律"}],"和",["$","strong",null,{"children":"单位律"}],"——以确保它们行为可预测："]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"身份律"}],"：直接应用一个函数或通过单子传递函数应该得到相同的结果。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"结合律"}],"：执行操作的顺序（链式调用）不会影响结果。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"单位律"}],"：一个值必须能够被提升到单子中，而不改变其行为。"]}]]}],["$","p",null,{"children":"理解这些法律对于有效实现或使用单子非常重要。"}],["$","p",null,{"children":["$","strong",null,{"children":"单子如何管理副作用并保持函数式纯洁："}]}],["$","p",null,{"children":"通过封装副作用，单子使得开发者能够保持代码的其余部分保持纯洁，从而更易理解和维护。它们使副作用变得可预测和可管理，这对于需要保持状态一致性和错误处理的大型应用程序至关重要。"}],["$","p",null,{"children":"通过利用单子，开发者可以增强 JavaScript 应用程序的功能，确保它们以函数式的方式处理副作用，从而促进代码的可靠性和可维护性。"}],["$","h2",null,{"className":"content-header","id":"6-这些概念如何相互关联","children":[["$","a",null,{"href":"#6-这些概念如何相互关联","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"6. 这些概念如何相互关联"]}],["$","p",null,{"children":"纯函数、不变性、柯里化、记忆化和单子这些概念不仅是独立的元素，它们是增强 JavaScript 应用程序稳健性和可维护性的相互关联的工具。以下是它们如何协同工作，创造出一个完整的函数式编程环境。"}],["$","p",null,{"children":["$","strong",null,{"children":"构建函数式协同效应："}]}],["$","ul",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"纯函数和不变性"}],"：纯函数确保函数没有副作用，并且对相同的输入总是返回相同的输出，而不变性则防止了数据在没有预期的情况下被修改。二者共同确保了一个可预测、稳定的代码库。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"柯里化和记忆化"}],"：柯里化使函数能够分解为更简单的单一参数函数，这些函数更容易管理并且能够被记忆化。记忆化可以应用于这些柯里化后的函数，以缓存它们的结果，从而优化应用的性能，避免重复计算。"]}],["$","li",null,{"children":[["$","strong",null,{"children":"单子和纯函数"}],"：单子帮助以受控方式管理副作用，使得纯函数在处理 I/O 或状态转换等操作时仍然保持纯洁性。这种副作用的封装确保了函数式架构的完整性。"]}]]}],["$","p",null,{"children":["$","strong",null,{"children":"示例：一个小的函数式模块："}]}],["$","p",null,{"children":"让我们考虑一个实际的例子，其中这些概念协同工作。假设我们正在构建一个简单的用户注册模块："}],["$","$L12",null,{"className":"language-javascript","children":["$","code",null,{"className":"language-javascript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 一个纯函数来验证用户输入"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," ",["$","span",null,{"className":"token function function-variable","children":"validateInput"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"input"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," input",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"trim"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator","children":"!=="}]," ",["$","span",null,{"className":"token string","children":"''"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 柯里化函数来创建用户对象"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," ",["$","span",null,{"className":"token function function-variable","children":"createUser"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"name"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token literal-property property","children":"id"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token class-name known-class-name","children":"Date"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"now"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":","}]," name ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 记忆化 createUser 函数，避免冗余操作"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," memoizedCreateUser ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"memoize"}],["$","span",null,{"className":"token punctuation","children":"("}],"createUser",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 一个单子，用来处理用户输入可能为空的情况"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," ",["$","span",null,{"className":"token function function-variable","children":"getUser"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token parameter","children":"input"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator arrow","children":"=>"}]," ",["$","span",null,{"className":"token keyword","children":"new"}]," ",["$","span",null,{"className":"token class-name","children":"Maybe"}],["$","span",null,{"className":"token punctuation","children":"("}],"input",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"bind"}],["$","span",null,{"className":"token punctuation","children":"("}],"validateInput",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token comment","children":"// 示例使用"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," input ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"getUser"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"'  John Doe  '"}],["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," user ",["$","span",null,{"className":"token operator","children":"="}]," input",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"bind"}],["$","span",null,{"className":"token punctuation","children":"("}],"memoizedCreateUser",["$","span",null,{"className":"token punctuation","children":")"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token class-name console","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],"user",["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function property-access method","children":"toString"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token comment","children":"// 输出用户信息或空的 Maybe"}],"\n"]}]]}]}],["$","p",null,{"children":["在这个例子中，",["$","code",null,{"className":"custom-code","children":"validateInput"}]," 是一个纯函数，确保输入的有效性；",["$","code",null,{"className":"custom-code","children":"createUser"}]," 是一个柯里化并记忆化的函数，优化了性能；",["$","code",null,{"className":"custom-code","children":"getUser"}]," 使用单子来安全地处理可能为空的值。"]}],["$","h4",null,{"className":"content-header","id":"结论","children":[["$","a",null,{"href":"#结论","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"结论"]}],["$","p",null,{"children":"理解并集成这些函数式编程概念可以显著提高 JavaScript 代码的质量和可维护性。通过结合使用纯函数、不变性、柯里化、记忆化和单子，开发者可以编写出更加可靠、高效和简洁的应用程序。"}],["$","p",null,{"children":"通过接受这些相互关联的原则，JavaScript 开发者可以充分发挥函数式编程的潜力，编写更好的、更可持续的代码。"}]]}]}],["$","div",null,{"className":"pb-6 pt-6 text-center text-gray-700 dark:text-gray-300","id":"comment","children":["$","$L13",null,{"slug":"frontend/javascript-function"}]}],["$","footer",null,{"children":["$","div",null,{"className":"flex flex-col text-sm font-medium sm:flex-row sm:justify-between sm:text-base","children":[["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/go/go-sql","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Previous post: 深入理解Go SQL内部机制","children":["← ","深入理解Go SQL内部机制"]}]}],["$","div",null,{"className":"pt-4 xl:pt-8","children":["$","$L9",null,{"href":"/blog/docker/union-filesystem","className":"text-primary-500 hover:text-primary-600 dark:hover:text-primary-400","aria-label":"Next post: 深入Docker内部原理 - 联合文件系统","children":["深入Docker内部原理 - 联合文件系统"," →"]}]}]]}]}]]}]]}]}]]}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"深入探讨 JavaScript 中的函数式编程"}],["$","meta","3",{"name":"description","content":"本文深入探讨了 JavaScript 中的函数式编程，重点介绍了纯函数、不变性、柯里化、记忆化和单子等概念。通过这些技术，开发者可以编写更加可预测、可维护和高效的代码。文章展示了如何通过这些概念协同工作，提升代码的可靠性、复用性和性能，是理解和应用函数式编程的重要指南。"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://blog.mainjay.cloudns.ch/blog/frontend/javascript-function"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.mainjay.cloudns.ch/feed.xml"}],["$","meta","8",{"property":"og:title","content":"深入探讨 JavaScript 中的函数式编程"}],["$","meta","9",{"property":"og:description","content":"本文深入探讨了 JavaScript 中的函数式编程，重点介绍了纯函数、不变性、柯里化、记忆化和单子等概念。通过这些技术，开发者可以编写更加可预测、可维护和高效的代码。文章展示了如何通过这些概念协同工作，提升代码的可靠性、复用性和性能，是理解和应用函数式编程的重要指南。"}],["$","meta","10",{"property":"og:url","content":"https://blog.mainjay.cloudns.ch/blog/frontend/javascript-function"}],["$","meta","11",{"property":"og:site_name","content":"MainJayLai Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","14",{"property":"og:type","content":"article"}],["$","meta","15",{"property":"article:published_time","content":"2024-11-14T00:00:00.000Z"}],["$","meta","16",{"property":"article:modified_time","content":"2024-11-14T00:00:00.000Z"}],["$","meta","17",{"property":"article:author","content":"mainJayLai"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"深入探讨 JavaScript 中的函数式编程"}],["$","meta","20",{"name":"twitter:description","content":"本文深入探讨了 JavaScript 中的函数式编程，重点介绍了纯函数、不变性、柯里化、记忆化和单子等概念。通过这些技术，开发者可以编写更加可预测、可维护和高效的代码。文章展示了如何通过这些概念协同工作，提升代码的可靠性、复用性和性能，是理解和应用函数式编程的重要指南。"}],["$","meta","21",{"name":"twitter:image","content":"https://pngimg.com/uploads/github/github_PNG80.png"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
