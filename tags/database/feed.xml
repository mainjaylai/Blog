
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>MainJayLai Blog</title>
      <link>https://blog.mainjay.cloudns.ch/blog</link>
      <description>A blog created with Next.js and Tailwind.css by MainJayLai</description>
      <language>en-us</language>
      <managingEditor>mainjaylai@outlook.com (MainJayLai)</managingEditor>
      <webMaster>mainjaylai@outlook.com (MainJayLai)</webMaster>
      <lastBuildDate>Tue, 22 Oct 2024 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://blog.mainjay.cloudns.ch/tags/database/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/database/Innodb-engine</guid>
    <title>InnoDB 引擎</title>
    <link>https://blog.mainjay.cloudns.ch/blog/database/Innodb-engine</link>
    <description>InnoDB 是 MySQL 的默认存储引擎，提供了 ACID 事务支持、行级锁定、外键约束等特性。通过多版本并发控制（MVCC）机制实现了高并发性能，同时保证了数据的一致性和可靠性。</description>
    <pubDate>Tue, 22 Oct 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>database</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/database/database-sharding</guid>
    <title>数据库分片如何提升性能</title>
    <link>https://blog.mainjay.cloudns.ch/blog/database/database-sharding</link>
    <description>分片是应对网络应用进化挑战的有效方法，但不应忽视其他解决方案如云数据库和新数据库架构。虽然技术趋势不断变化，判断一项技术应基于其实际性、效率和成本效益。保持对新趋势的开放态度，同时也应重视成熟技术的优势。</description>
    <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>database</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/database</guid>
    <title>深入剖析数据库索引</title>
    <link>https://blog.mainjay.cloudns.ch/blog/database</link>
    <description>数据库索引的使用需谨慎，它们能显著提升读操作效率，但也增加了内存消耗和写操作成本。选择合适数量和类型的索引至关重要，基数（即列中不同值的数量）对索引效果至关重要。定期维护索引是必要的，以避免内存浪费。深入理解数据库索引的各个方面，将有助于优化应用程序性能和设计决策。</description>
    <pubDate>Tue, 09 Jul 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>database</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/database/lock</guid>
    <title>数据库锁之间有哪些区别？</title>
    <link>https://blog.mainjay.cloudns.ch/blog/database/lock</link>
    <description>数据库锁（Database Locks）是确保数据一致性和完整性的重要机制，防止多个事务同时访问同一数据资源导致数据冲突。不同类型的锁有不同的特性和用途。</description>
    <pubDate>Mon, 01 Jul 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>database</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/go/go-sql</guid>
    <title>深入理解Go SQL内部机制</title>
    <link>https://blog.mainjay.cloudns.ch/blog/go/go-sql</link>
    <description>这是一篇关于Go SQL内部机制的深度解析文章。文章详细探讨了预处理语句的工作原理、连接池的生命周期管理，以及实际生产环境中常见的问题和解决方案。同时提供了具体的客户端和服务器端配置建议，对于构建高性能Go数据库应用具有重要的参考价值。</description>
    <pubDate>Wed, 13 Nov 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>database</category><category>backend</category><category>go</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/go/postgres-notifier</guid>
    <title>基于 Postgres 的通知模式（Notifier Pattern）</title>
    <link>https://blog.mainjay.cloudns.ch/blog/go/postgres-notifier</link>
    <description>Postgres 的 LISTEN/NOTIFY 功能通过通知器模式优化了连接管理，减少了每个程序需要的数据库连接数量，避免了为每个主题创建多个连接。通过使用缓冲通道和非阻塞发送，通知器能够高效处理大量通知。同时，结合上下文超时机制和“让它崩溃”策略，可以确保系统在出现问题时快速恢复。PgBouncer 的会话池模式支持 LISTEN，提高连接效率。</description>
    <pubDate>Fri, 22 Nov 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>backend</category><category>go</category><category>database</category>
  </item>

  <item>
    <guid>https://blog.mainjay.cloudns.ch/blog/security/database-password</guid>
    <title>如何安全地存储密码在数据库</title>
    <link>https://blog.mainjay.cloudns.ch/blog/security/database-password</link>
    <description>安全存储密码需要三步：哈希将密码不可逆转为指纹，避免明文泄露；加盐为每个用户生成唯一盐，抵御彩虹表攻击；延展重复哈希多次，延缓暴力破解。结合 bcrypt 等算法，确保密码保护更安全高效，切勿直接存储明文密码。</description>
    <pubDate>Tue, 26 Nov 2024 00:00:00 GMT</pubDate>
    <author>mainjaylai@outlook.com (MainJayLai)</author>
    <category>network security</category><category>database</category><category>backend</category>
  </item>

    </channel>
  </rss>
